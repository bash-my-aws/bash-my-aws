{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bash-my-AWS - CLI Commands for AWS","text":"<p>Bash-my-AWS is a simple but powerful set of CLI commands for managing resources on Amazon Web Services.</p> <p>They harness the power of Amazon's AWSCLI, while abstracting away verbosity.</p> <p>The project implements some innovative patterns but (arguably) remains simple, beautiful and readable.</p> <p>github.com/bash-my-aws/bash-my-aws</p> <p></p>"},{"location":"#introduction","title":"Introduction","text":"<ul> <li>Short, Memorable Commands</li> <li>Shell Command Completion (including AWS resources)</li> <li>Unix Pipeline Friendly (instead of JSON)</li> <li>Convenient Shortcuts</li> </ul>"},{"location":"#short-memorable-commands","title":"Short, Memorable Commands","text":"<p>There are two main types of commands.</p> <p>1. Resource Listing Commands</p> <p>These generally consist of the pluralised form of the resource name.</p> <pre><code>$ buckets\nexample-assets   2019-12-08  02:35:44.758551\nexample-logs     2019-12-08  02:35:52.669771\nexample-backups  2019-12-08  02:35:56.579434\n</code></pre> <pre><code>$ stacks\nnagios      CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\npostgres01  CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\npostgres02  CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\nprometheus  CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\n</code></pre> <pre><code>$ keypairs\nalice  8f:85:9a:1e:6c:76:29:34:37:45:de:7f:8d:f9:70:eb\nbob    56:73:29:c2:ad:7b:6f:b6:f2:f3:b4:de:e4:2b:12:d4\ncarol  29:4e:1c:cb:ba:d4:85:0e:4f:b6:34:4c:d4:79:32:00\n</code></pre> <p>2. Resource detail/action commands</p> <p>These generally consist of a resource name and action separated by a hyphen. This makes discovering them via shell completion simple.</p> <p>Some retrieve information about resources while others make changes to them.</p> <pre><code>$ keypair-delete alice bob\nYou are about to delete the following EC2 SSH KeyPairs:\nalice\nbob\nAre you sure you want to continue? y\n</code></pre> <p>See the Command Reference for a full list of commands.</p>"},{"location":"#shell-command-completion","title":"Shell Command Completion","text":"<p>In the example above, shell autocompletion retrieved the existing EC2 Keypair names (<code>alice</code>, <code>bob</code>) from AWS. This helps avoid the need to rely on human memory or terminal copypasta.</p> <p>Additionally, all of the bash-my-aws commands are available as completions for the <code>bma</code> command. This means you can <code>bma[tab][tab]</code> to get a listing of all the commands.</p>"},{"location":"#unix-pipeline-friendly","title":"Unix Pipeline Friendly","text":"<p>The commands themselves are line oriented and work nicely in unix pipelines with other unix commands (e.g. <code>grep</code>, <code>awk</code>, etc).</p> <pre><code>$ stacks | grep postgres\npostgres01  CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\npostgres02  CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\n</code></pre> <p>They also work incredibly well with each other due to the way they treat input from STDIN. The first token from each line of STDIN is taken to be a resource identifiers (and the rest is discarded).</p> <pre><code>$ stacks | grep postgres | stack-delete\nYou are about to delete the following stacks:\npostgres01\npostgres02\nAre you sure you want to continue? y\n</code></pre> <p>Some users have compared this User Experience to functionality in Windows Powershell.</p>"},{"location":"#convenient-shortcuts","title":"Convenient Shortcuts","text":"<p>Bash-my-AWS is insanely simple to pick up and start using but contains a lot of convenient shortcuts you can make use of.</p> <p>Example: resource listing commands accept a filter argument, removing the need for <code>| grep</code>.</p> <p>In the following example someone has given a CloudFormation stack a really long name:</p> <pre><code>$ stacks\nnagios                             CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\npostgres01                         DELETE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\npostgres02                         DELETE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\nprometheus                         CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\nstack-with-a-annoyingly-long-name  CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\n</code></pre> <p>This affects the output when we look at our Postgres stacks:</p> <pre><code>$ stacks | grep postgres\npostgres01                         DELETE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\npostgres02                         DELETE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\n</code></pre> <p>The resource listing command can filter output before applying <code>column</code>.</p> <pre><code>$ stacks postgres\npostgres01  DELETE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\npostgres02  DELETE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED\n</code></pre>"},{"location":"#quickstart","title":"Quickstart","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>awscli</li> <li>bash</li> <li>jq-1.4 or later (for stack-diff)</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>As shown below, you may simply clone the GitHub repo and source the files required. (You should probably fork it instead to keep your customisations)</p> <pre><code>$ git clone https://github.com/bash-my-aws/bash-my-aws.git ${BMA_HOME:-$HOME/.bash-my-aws}\n</code></pre> <p>Put the following in your shell's startup file:</p> <pre><code>export PATH=\"$PATH:${BMA_HOME:-$HOME/.bash-my-aws}/bin\"\nsource ${BMA_HOME:-$HOME/.bash-my-aws}/aliases\n\n# For ZSH users, uncomment the following two lines:\n# autoload -U +X compinit &amp;&amp; compinit\n# autoload -U +X bashcompinit &amp;&amp; bashcompinit\n\nsource ${BMA_HOME:-$HOME/.bash-my-aws}/bash_completion.sh\n</code></pre> <p>Why use shell aliases?</p> <p><code>Bash-my-AWS</code> began as a collection of bash functions, sourced into your shell. More recently, the default suggestion has been to load aliases that execute a small wrapper script that loads the functions and executes the desired function.</p> <p>After years of <code>zsh</code> users asking for support, one stepped up and identified a changes that would eliminate any shell compatibility problems without compromising the functionaility, simplicity and discoverability of the project. Massive thanks to @ninth-dev for this.</p> <pre><code>        # bash users may source the functions instead of loading the aliases\nif [ -d ${BMA_HOME:-$HOME/.bash-my-aws} ]; then\nfor f in ${BMA_HOME:-$HOME/.bash-my-aws}/lib/*-functions; do source $f; done\nfor f in ~/.bash-my-aws/lib/*-functions; do source $f; done\nfi\n</code></pre>"},{"location":"#usage","title":"Usage","text":""},{"location":"#running-commands","title":"Running Commands","text":"<p>The default way to run the commands is using the aliases:</p> <pre><code>$ instances\ni-e6f097f6ea4457757  ami-123456789012  t3.nano  running  example-ec2-ap-southeast-2  2019-12-07T08:12:00.000Z  ap-southeast-2a  None\ni-b983805b4b254f749  ami-123456789012  t3.nano  running  postfix-prod                2019-12-07T08:26:30.000Z  ap-southeast-2a  None\ni-fed39ebe7204dfd37  ami-123456789012  t3.nano  running  postfix-prod                2019-12-07T08:26:34.000Z  ap-southeast-2a  None\ni-47955eb46d98b4dd8  ami-123456789012  t3.nano  running  prometheus                  2019-12-07T08:27:02.000Z  ap-southeast-2a  None\ni-8d25b78d40d17f38a  ami-123456789012  t3.nano  running  plex-server                 2019-12-07T08:27:38.000Z  ap-southeast-2a  None\n</code></pre> <p>It's also possible to run them using the <code>bma</code> wrapper. (This is sometimes required when using a restrictive auth tool.)</p> <pre><code>$ bma instances\ni-e6f097f6ea4457757  ami-123456789012  t3.nano  running  example-ec2-ap-southeast-2  2019-12-07T08:12:00.000Z  ap-southeast-2a  None\ni-b983805b4b254f749  ami-123456789012  t3.nano  running  postfix-prod                2019-12-07T08:26:30.000Z  ap-southeast-2a  None\ni-fed39ebe7204dfd37  ami-123456789012  t3.nano  running  postfix-prod                2019-12-07T08:26:34.000Z  ap-southeast-2a  None\ni-47955eb46d98b4dd8  ami-123456789012  t3.nano  running  prometheus                  2019-12-07T08:27:02.000Z  ap-southeast-2a  None\ni-8d25b78d40d17f38a  ami-123456789012  t3.nano  running  plex-server                 2019-12-07T08:27:38.000Z  ap-southeast-2a  None\n</code></pre>"},{"location":"#discovering-commands","title":"Discovering Commands","text":"<p>For each resource type, there is a command to list them:</p> <pre><code>$ instances\ni-e6f097f6ea4457757  ami-123456789012  t3.nano  running  example-ec2-ap-southeast-2  2019-12-07T08:12:00.000Z  ap-southeast-2a  None\ni-b983805b4b254f749  ami-123456789012  t3.nano  running  postfix-prod                2019-12-07T08:26:30.000Z  ap-southeast-2a  None\ni-fed39ebe7204dfd37  ami-123456789012  t3.nano  running  postfix-prod                2019-12-07T08:26:34.000Z  ap-southeast-2a  None\ni-47955eb46d98b4dd8  ami-123456789012  t3.nano  running  prometheus                  2019-12-07T08:27:02.000Z  ap-southeast-2a  None\ni-8d25b78d40d17f38a  ami-123456789012  t3.nano  running  plex-server                 2019-12-07T08:27:38.000Z  ap-southeast-2a  None\n</code></pre> <p>and a number of command to act on these resources:</p> <pre><code>$ instance-[TAB][TAB]\ninstance-asg          instance-ssh-details  instance-termination-protection\ninstance-az           instance-stack        instance-termination-protection-disable\ninstance-console      instance-start        instance-termination-protection-enable\ninstance-dns          instance-state        instance-type\ninstance-iam-profile  instance-stop         instance-userdata\ninstance-ip           instance-tags         instance-volumes\ninstance-ssh          instance-terminate    instance-vpc\n</code></pre> <p>Whether you're new to the tools or just have a bad memory, bash completion makes discovering these commands simple.</p> <p>See the Command Reference for a full list with usage examples</p>"},{"location":"#piping-between-commands","title":"Piping Between Commands","text":"<p>This is where the magic happens!</p> <p>The first token on each line is almost always a resource identifier. When you pipe output between the commands they just take the first token from each line.</p> <pre><code>$ instances | grep postfix | instance-ip\ni-b983805b4b254f749  10.190.1.70    54.214.71.51\ni-fed39ebe7204dfd37  10.135.204.82  54.214.26.190\n</code></pre> <p>Note</p> <p>Most commands that list resources (<code>stacks</code>, <code>instances</code> , etc) accept filter term as first arg. As well as reducing keystrokes, it can also improve output as columnisation is done after filtering.</p> <pre><code>$ instances postfix | instance-ip\ni-b983805b4b254f749  10.190.1.70    54.214.71.51\ni-fed39ebe7204dfd37  10.135.204.82  54.214.26.190\n</code></pre>"},{"location":"#inspecting-commands","title":"Inspecting Commands","text":"<p>For those interested in how it works:</p> <ul> <li>Each command is a bash function.</li> <li>Most are very simple and wrap an AWSCLI command.</li> </ul> <p>For a quick look at how a command works, you can use <code>bma type</code>:</p> <pre><code>$ bma type instances\ninstances is a function\ninstances () { local instance_ids=$(__bma_read_inputs);\nlocal filters=$(__bma_read_filters $@);\naws ec2 describe-instances $([[ -n ${instance_ids} ]] &amp;&amp; echo --instance-ids ${instance_ids}) --query \"\n      Reservations[].Instances[][\n        InstanceId,\n        ImageId,\n        InstanceType,\n        State.Name,\n        [Tags[?Key=='Name'].Value][0][0],\n        LaunchTime,\n        Placement.AvailabilityZone,\n        VpcId\n      ]\" --output text | grep -E -- \"$filters\" | LC_ALL=C sort -b -k 6 | column -s' ' -t\n}\n</code></pre> <p>A prettier version can be found in the source code:</p> <pre><code># ~/.bash-my-aws/lib/instance-functions\ninstances() {\nlocal instance_ids=$(__bma_read_inputs)\nlocal filters=$(__bma_read_filters $@)\n\naws ec2 describe-instances                                            \\\n$([[ -n ${instance_ids} ]] &amp;&amp; echo --instance-ids ${instance_ids})  \\\n--query \"\n      Reservations[].Instances[][\n        InstanceId,\n        ImageId,\n        InstanceType,\n        State.Name,\n        [Tags[?Key=='Name'].Value][0][0],\n        LaunchTime,\n        Placement.AvailabilityZone,\n        VpcId\n      ]\"                                                               \\\n--output text       |\ngrep -E -- \"$filters\" |\nLC_ALL=C sort -b -k 6 |\ncolumnise\n}\n</code></pre> <p>For more info on AWSCLI query syntax, check out http://jmespath.org/tutorial.html</p>"},{"location":"cachews-caching-for-awscli/","title":"Cachews - Zero Configuration Caching for AWSCLI","text":"<p>cachews is a zero-config caching proxy for awscli.</p> <p>Reducing request time by around 90% may also reduce:</p> <ul> <li>cycle time when constructing commands or scripts that use awscli</li> <li>your resistance to running a query across 500 accounts</li> <li>the number of cups of tea you drink</li> </ul> <p></p> <p>It supports the following arguments (and ignores the rest):</p> <p><code>--query</code>   : JMESPath querys as found in awscli (and azcli)   <code>--output</code>  : <code>json</code> or <code>text</code> (tab separated values)</p>"},{"location":"cachews-caching-for-awscli/#usage","title":"Usage","text":"<p>Choose from one of the two commands depending on your needs:</p> <ul> <li><code>cachews</code>: A drop in replacement for <code>aws</code> command</li> <li><code>cachews-replace</code>: Runs any command, replacing <code>aws</code> with <code>cachews</code> executable</li> </ul> <p>As a bonus, you can set <code>BMA_AWSCLI=cashews</code> to enable for all bash-my-aws commands.</p> <p>See below for real world examples.</p>"},{"location":"cachews-caching-for-awscli/#cachews-replace-aws-command-with-cachews","title":"<code>cachews</code> - Replace <code>aws</code> command with <code>cachews</code>","text":"<p>The simplest use case is to substitute <code>aws</code> for <code>cachews</code> in your command.</p> <p>$ export CACHEWS_DIR=\"$(mktemp -d)\"</p> <pre><code>$ time aws ec2 describe-instances | wc -l\n844\n\nreal    0m1.113s\nuser    0m0.823s\nsys     0m0.076s\n</code></pre> <pre><code>$ time cachews ec2 describe-instances | wc -l\n844\n\nreal    0m1.147s\nuser    0m0.861s\nsys     0m0.088s\n</code></pre> <pre><code>$ time cachews ec2 describe-instances | wc -l\n844\n\nreal    0m0.081s\nuser    0m0.061s\nsys     0m0.023s\n</code></pre>"},{"location":"cachews-caching-for-awscli/#cachews-replace-avoids-need-to-change-code","title":"cachews-replace - avoids need to change code","text":"<p>This could be a script with AWSCLI calls or even this crazy example.</p> <pre><code>$ time cachews-replace aws ec2 describe-instances | wc -l\n844\n\nreal    0m0.083s\nuser    0m0.065s\nsys 0m0.020s\n</code></pre>"},{"location":"cachews-caching-for-awscli/#bash-my-aws-commands-using-bma_awscli-environment-variable","title":"bash-my-aws commands using BMA_AWSCLI environment variable","text":"<p>The <code>bma</code> command exports a function called <code>aws</code> that calls the command in BMA_AWSCLI=cachews if one is set.</p> <pre><code>$ time bma instances | wc -l\n4\n\nreal    0m1.200s\nuser    0m0.834s\nsys     0m0.098s\n</code></pre> <pre><code>$ time BMA_AWSCLI=cachews bma instances | wc -l\n4\n\nreal    0m0.099s\nuser    0m0.079s\nsys     0m0.026s\n</code></pre> <p>bash-my-aws added <code>$BMA_AWSCLI</code> support back in 2020 to assist testing breaking changes in aws-cli-v2. Almost four years later when I wrote cachews it was a nice surprise to rediscover it.</p> <pre><code>commit 17376e63222033fef2a1005be6bccb0123263629\nAuthor: Mike Bailey &lt;mike@bailey.net.au&gt;\nDate:   Sun Mar 8 12:25:00 2020 +1100\n\n    Set $BMA_AWSCLI to specify which awscli to use\n\n    Added while testing breaking changes in aws-cli-v2\n\n    Also useful for testing with\n    [localstack](https://github.com/localstack/localstack)\n\n      e.g. `$ BMA_AWSCLI=awslocal stacks`\n\n    Also, print AWSCLI version when BMA_DEBUG=true\n</code></pre>"},{"location":"cloudformation-naming/","title":"CloudFormation Naming Conventions - Bash-my-AWS","text":""},{"location":"cloudformation-naming/#suggested-stacktemplateparam-file-naming-conventions","title":"Suggested stack/template/param file naming conventions","text":"<p>bash-my-aws can take a lot of the effort out of creating and updating CloudFormation (CFN) stacks. Tab completion on remote stack names and even local file names is provided.</p> <p>Additionally, the create/update/diff commands can make life much easier if you follow some simple file naming conventions.</p> <p>These are completely optional.</p> <pre><code>stack   : token-env\ntemplate: token.yml\nparams  : token-params-env.json or params/token-params-env.json\n</code></pre> <p>Where:</p> <pre><code>token : describes the resources (mywebsite, vpc, bastion, etc)\nenv   : environment descriptor (dev, test, prod, etc)\n</code></pre> <p>Following these (entirely optional) conventions means bash-my-aws can infer template &amp; params file from stack name. For example:</p> <pre><code>$ stack-create mywebsite-test\n</code></pre> <p>is equivalent (if files present) to:</p> <pre><code>$ stack-create mywebsite-test mywebsite.yml mywebsite-params-test.json\n</code></pre> <p>you could even achieve the same result with:</p> <pre><code>$ stack-create mywebsite-params-test.json\n</code></pre> <p>Other benefits include:</p> <ul> <li>ease in locating stack for template (and vice versa) based on name</li> <li>template and params files are listed together on filesystem</li> <li>stack name env suffixes protect against accidents (wrong account error)</li> <li>supports prodlike non-prod environments through using same template</li> </ul> <p>And don't forget, these naming conventions are completely optional.</p>"},{"location":"command-reference/","title":"Bash-my-AWS Command Reference","text":"<p>Bash-my-AWS provides over 120 commands for managing AWS Resources but fear not!</p> <p>Effort has been put into making them discoverable, memorable and hopefully in most cases obvious.</p> <p>The reference material below is all extracted from the source of the commands.</p> <p>Lists in this project are alphabetised except where it makes sense not to. The first few sets of commands were chosen because they are likely to be of the most interest to readers.</p> <p>General Rules</p> <ul> <li>Commands expect <code>$AWS_DEFAULT_REGION</code> environment variable to be set   (check/set with <code>region</code> command)</li> <li>Most commands that list resources (<code>stacks</code>, `instances , etc)   accept filter term as first arg.<ul> <li>e.g. <code>stacks blah</code> is equivalent to <code>stacks | grep blah</code></li> </ul> </li> <li>Most commands accept resource identifiers via STDIN   (first token of each line)</li> <li>Resources are generally listed in chronological order of creation.</li> </ul>"},{"location":"command-reference/#aws-account-commands","title":"aws-account-commands","text":""},{"location":"command-reference/#aws-accounts","title":"aws-accounts","text":"<p>List AWS Accounts in an Organization</p> <p>$ aws-accounts    089834043791  account1 ACTIVE  INVITED  1488257653.638  mike-aws@bailey.net.au    812094344564  account2 ACTIVE  CREATED  1537922950.972  mike-bash-my-aws@bailey.net.au    001721147249  account3 ACTIVE  INVITED  1548752330.723  mike@bailey.net.au    867077406134  account4 ACTIVE  CREATED  1557910982.885  mike-deleteme@bailey.net.au    892345420873  account5 ACTIVE  CREATED  1557911243.358  mike-delete@bailey.net.au</p> <p>Optionally provide a filter string for a <code>| grep</code> effect with tighter columisation:</p>"},{"location":"command-reference/#aws-account-alias","title":"aws-account-alias","text":"<p>Retrieve AWS Account Alias for current account</p> <pre><code>$ aws-account-alias\nexample-account-prod\n</code></pre>"},{"location":"command-reference/#aws-account-id","title":"aws-account-id","text":"<p>Retrieve AWS Account ID for current account</p> <pre><code>$ aws-account-id\n012345678901\n</code></pre>"},{"location":"command-reference/#aws-account-each","title":"aws-account-each","text":"<p>Run a script/command across a number of AWS Accounts</p> <pre><code>USAGE: aws-account-each cmd # pipe in AWS_ACCOUNT_IDS\n\n$ grep non_prod AWS_ACCOUNTS | aws-account-each stacks FAILED\n\n# account=012345678901 alias=example-account-prod\nexample-stack1-prod  CREATED_FAILED\nexample-stack2-prod  UPDATE_ROLLBACK_FAILED\n# account=123456789012 alias=example-account-staging\nexample-stack1-staging  CREATED_FAILED\nexample-stack2-staging  UPDATE_ROLLBACK_FAILED\n</code></pre> <p>Note</p> <p>In order to use <code>aws-account-each</code>, you need to be authenticated with an IAM Role that can assume a Role in each of the specified accounts. Check the source for more info.</p>"},{"location":"command-reference/#aws-panopticon","title":"aws-panopticon","text":"<p>aws-panopticon was previous name for aws-account-each()</p>"},{"location":"command-reference/#aws-account-cost-explorer","title":"aws-account-cost-explorer","text":"<p>Use with an AWS Organisations Master Account to open multiple accounts in Cost Explorer.</p> <pre><code>$ grep demo AWS_ACCOUNTS | aws-account-cost-explorer\n#=&gt; Opens web browser to AWS Cost Explorer with accounts selected\n</code></pre>"},{"location":"command-reference/#aws-account-cost-recommendations","title":"aws-account-cost-recommendations","text":"<p>Use with an AWS Organisations Master Account to open multiple accounts in Cost Recommendations.</p> <pre><code>$ grep non_prod AWS_ACCOUNTS | aws-account-each stacks FAILED\n#=&gt; Opens web browser to AWS Cost Recommendations with accounts selected\n</code></pre>"},{"location":"command-reference/#region-commands","title":"region-commands","text":""},{"location":"command-reference/#regions","title":"regions","text":"<p>List regions</p> <p>The region() function must be sourced in order to update the AWS_DEFAULT_REGION environment variable. This is because it cannot update an environment variable when run as a subprocess.</p> <pre><code>$ regions\nap-northeast-1\nap-northeast-2\nap-south-1\nap-southeast-1\nap-southeast-2\n...\nus-west-2\n</code></pre>"},{"location":"command-reference/#region","title":"region","text":"<p>Get/Set <code>$AWS_DEFAULT_REGION</code> shell environment variable</p> <pre><code>$ region\nus-east-1\n\n$ region ap-southeast-2\n\n$ region\nap-southeast-2\n</code></pre>"},{"location":"command-reference/#region-each","title":"region-each","text":"<p>Run a command in every region. Any output lines will be appended with \"#${REGION}\".</p> <pre><code>$ region-each stacks\nexample-ec2-ap-northeast-1  CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED  #ap-northeast-1\nexample-ec2-ap-northeast-2  CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED  #ap-northeast-2\n...\nexample-ec2-us-west-2       CREATE_COMPLETE  2011-05-23T15:47:44Z  NEVER_UPDATED  NOT_NESTED  #us-west-2\n</code></pre>"},{"location":"command-reference/#stack-commands","title":"stack-commands","text":""},{"location":"command-reference/#stacks","title":"stacks","text":"<p>List CloudFormation stacks.</p> <p>To make it fly we omit stacks with status of DELETE_COMPLETE Output is sorted by CreationTime</p> <pre><code>$ stacks\nnagios          CREATE_COMPLETE  2018-03-12T11:41:31Z  NEVER_UPDATED  NOT_NESTED\npostgres1       CREATE_COMPLETE  2019-04-14T15:22:44Z  NEVER_UPDATED  NOT_NESTED\npostgres2       CREATE_COMPLETE  2019-05-18T05:45:50Z  NEVER_UPDATED  NOT_NESTED\nprometheus-web  CREATE_COMPLETE  2019-11-23T15:57:04Z  NEVER_UPDATED  NOT_NESTED\n</code></pre> <p>Provide a filter string for a <code>| grep</code> effect with tighter columisation:</p> <pre><code>$ stacks postgres\npostgres1  CREATE_COMPLETE  2019-04-14T15:22:44Z  NEVER_UPDATED  NOT_NESTED\npostgres2  CREATE_COMPLETE  2019-05-18T05:45:50Z  NEVER_UPDATED  NOT_NESTED\n</code></pre>"},{"location":"command-reference/#stack-arn","title":"stack-arn","text":"<p>Returns ARN(s) for stacks.</p> <pre><code>USAGE: stack-arn stack [stack]\n\n$ stack-arn prometheus-web\narn:aws:cloudformation:us-east-1:000000000000:stack/prometheus-web/805e081c-b8eb-4f6c-9872-2b5cddc77fba\n</code></pre> <p>Supports multiple stack names from STDIN:</p> <pre><code>$ stacks | stack-arn\narn:aws:cloudformation:us-east-1:000000000000:stack/nagios/c0f0ef04-b505-4c0c-87cd-ca924153ad1c\narn:aws:cloudformation:us-east-1:000000000000:stack/postgres1/758b0ba2-60f2-4432-8935-f79f47708f23\narn:aws:cloudformation:us-east-1:000000000000:stack/postgres2/7420bbd4-3026-444f-b55b-fa0a9d564730\narn:aws:cloudformation:us-east-1:000000000000:stack/prometheus-web/805e081c-b8eb-4f6c-9872-2b5cddc77fba\n</code></pre>"},{"location":"command-reference/#stack-cancel-update","title":"stack-cancel-update","text":"<p>Cancel an in-progress stack update</p>"},{"location":"command-reference/#stack-create","title":"stack-create","text":"<p>Create a CloudFormation Stack</p> <p>See suggested CloudFormation File Naming Conventions to take advantage of shorter commands</p> <pre><code>USAGE: stack-create stack [template-file] [parameters-file]             \\\n            [--capabilities=OPTIONAL_VALUE] [--role-arn=OPTIONAL_VALUE]\n\n$ stack-create params/asg-params-prod.json\nResolved arguments: asg-prod ./asg.yml params/asg-params-prod.json\narn:aws:cloudformation:ap-southeast-2:812094344564:stack/asg-prod/98d40130-23f2-11ea-b7c1-06494f833672\n----------------------------------------------------------------------------------------------\n|                                     DescribeStackEvents                                    |\n+---------------------------+-----------+------------------------------+---------------------+\n|  2019-12-21T13:05:44.261Z |  asg-prod |  AWS::CloudFormation::Stack  |  CREATE_IN_PROGRESS |\n--------------------------------------------------------------------------------------------------------------------\n|                                                DescribeStackEvents                                               |\n+--------------------------+----------------------+-----------------------------------------+----------------------+\n|  2019-12-21T13:05:44.261Z|  asg-prod            |  AWS::CloudFormation::Stack             |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:48.351Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:48.828Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:49.187Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_COMPLETE     |\n|  2019-12-21T13:05:51.230Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:51.837Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:52.950Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_COMPLETE     |\n|  2019-12-21T13:05:54.493Z|  asg-prod            |  AWS::CloudFormation::Stack             |  CREATE_COMPLETE     |\n+--------------------------+----------------------+-----------------------------------------+----------------------+\n</code></pre>"},{"location":"command-reference/#stack-update","title":"stack-update","text":"<p>Update a CloudFormation Stack</p> <p>See suggested CloudFormation File Naming Conventions to take advantage of shorter commands</p> <pre><code>USAGE: stack-update stack [template-file] [parameters-file] \\\n              [--capabilities=OPTIONAL_VALUE] [--role-arn=OPTIONAL_VALUE]\n\n$ stack-update params/asg-params-prod.json\nResolved arguments: asg-prod ./asg.yml params/asg-params-prod.json\narn:aws:cloudformation:ap-southeast-2:812094344564:stack/asg-prod/98d40130-23f2-11ea-b7c1-06494f833672\n--------------------------------------------------------------------------------------------------------------------\n|                                                DescribeStackEvents                                               |\n+--------------------------+----------------------+-----------------------------------------+----------------------+\n|  2019-12-21T13:05:44.261Z|  asg-prod            |  AWS::CloudFormation::Stack             |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:48.351Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:48.828Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:49.187Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_COMPLETE     |\n|  2019-12-21T13:05:51.230Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:51.837Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_IN_PROGRESS  |\n|  2019-12-21T13:05:52.950Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_COMPLETE     |\n|  2019-12-21T13:05:54.493Z|  asg-prod            |  AWS::CloudFormation::Stack             |  CREATE_COMPLETE     |\n|  2019-12-21T13:12:43.731Z|  asg-prod            |  AWS::CloudFormation::Stack             |  UPDATE_IN_PROGRESS  |\n|  2019-12-21T13:12:48.294Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  UPDATE_IN_PROGRESS  |\n-------------------------------------------------------------------------------------------------------------------------------------\n|                                                        DescribeStackEvents                                                        |\n+--------------------------+----------------------+-----------------------------------------+---------------------------------------+\n|  2019-12-21T13:05:44.261Z|  asg-prod            |  AWS::CloudFormation::Stack             |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:48.351Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:48.828Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:49.187Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_COMPLETE                      |\n|  2019-12-21T13:05:51.230Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:51.837Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:52.950Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_COMPLETE                      |\n|  2019-12-21T13:05:54.493Z|  asg-prod            |  AWS::CloudFormation::Stack             |  CREATE_COMPLETE                      |\n|  2019-12-21T13:12:43.731Z|  asg-prod            |  AWS::CloudFormation::Stack             |  UPDATE_IN_PROGRESS                   |\n|  2019-12-21T13:12:48.294Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  UPDATE_IN_PROGRESS                   |\n|  2019-12-21T13:14:05.182Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  UPDATE_COMPLETE                      |\n|  2019-12-21T13:14:07.118Z|  asg-prod            |  AWS::CloudFormation::Stack             |  UPDATE_COMPLETE_CLEANUP_IN_PROGRESS  |\n|  2019-12-21T13:14:07.820Z|  asg-prod            |  AWS::CloudFormation::Stack             |  UPDATE_COMPLETE                      |\n+--------------------------+----------------------+-----------------------------------------+---------------------------------------+\n</code></pre>"},{"location":"command-reference/#stack-delete","title":"stack-delete","text":"<p>Delete a CloudFormation Stack</p> <pre><code>USAGE: stack-delete stack [stack]\n\n$ stacks | stack-delete\nYou are about to delete the following stacks:\nasg-prod\nAre you sure you want to continue? y\n-------------------------------------------------------------------------------------------------------------------------------------\n|                                                        DescribeStackEvents                                                        |\n+--------------------------+----------------------+-----------------------------------------+---------------------------------------+\n|  2019-12-21T13:05:44.261Z|  asg-prod            |  AWS::CloudFormation::Stack             |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:48.351Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:48.828Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:49.187Z|  LaunchConfiguration |  AWS::AutoScaling::LaunchConfiguration  |  CREATE_COMPLETE                      |\n|  2019-12-21T13:05:51.230Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:51.837Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_IN_PROGRESS                   |\n|  2019-12-21T13:05:52.950Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  CREATE_COMPLETE                      |\n|  2019-12-21T13:05:54.493Z|  asg-prod            |  AWS::CloudFormation::Stack             |  CREATE_COMPLETE                      |\n|  2019-12-21T13:12:43.731Z|  asg-prod            |  AWS::CloudFormation::Stack             |  UPDATE_IN_PROGRESS                   |\n|  2019-12-21T13:12:48.294Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  UPDATE_IN_PROGRESS                   |\n|  2019-12-21T13:14:05.182Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  UPDATE_COMPLETE                      |\n|  2019-12-21T13:14:07.118Z|  asg-prod            |  AWS::CloudFormation::Stack             |  UPDATE_COMPLETE_CLEANUP_IN_PROGRESS  |\n|  2019-12-21T13:14:07.820Z|  asg-prod            |  AWS::CloudFormation::Stack             |  UPDATE_COMPLETE                      |\n|  2019-12-21T13:18:06.709Z|  asg-prod            |  AWS::CloudFormation::Stack             |  DELETE_IN_PROGRESS                   |\n|  2019-12-21T13:18:08.931Z|  AutoScalingGroup    |  AWS::AutoScaling::AutoScalingGroup     |  DELETE_IN_PROGRESS                   |\n\nAn error occurred (ValidationError) when calling the DescribeStackEvents operation: Stack [asg-prod] does not exist\n</code></pre> <p>Note that the error reported at the end of <code>stack-delete</code> command is just AWSCLI saying it can't find the stack anymore.</p>"},{"location":"command-reference/#stack-exports","title":"stack-exports","text":""},{"location":"command-reference/#stack-recreate","title":"stack-recreate","text":""},{"location":"command-reference/#stack-failure","title":"stack-failure","text":"<p>Return reason a stack failed to update/create/delete</p>"},{"location":"command-reference/#stack-events","title":"stack-events","text":"<p>List event history for a single Stack</p> <pre><code>USAGE: stack-events stack\n</code></pre>"},{"location":"command-reference/#stack-resources","title":"stack-resources","text":"<p>List all resources in Stack(s)</p> <pre><code>USAGE: stack-resources stack [stack]\n\n$ stacks | stack-resources\ni-7d54924538baa7a1f  AWS::EC2::Instance  ec2\ni-c54279c6055c3c794  AWS::EC2::Instance  nagios\ni-a8b8dd6783e1a40cc  AWS::EC2::Instance  postgres1\ni-5d74753e210bfe04d  AWS::EC2::Instance  postgres2\ni-2aa95cc214a461398  AWS::EC2::Instance  prometheus-web\n</code></pre>"},{"location":"command-reference/#stack-asgs","title":"stack-asgs","text":"<p>List ASGs in Stack(s)</p> <pre><code>USAGE: stack-asgs stack [stack]\n\n$ stacks | stack-asgs\nasg-bash-my-aws-AutoScalingGroup-MSBCWRTI3PVM  AWS::AutoScaling::AutoScalingGroup  asg-bash-my-aws\nasg2-AutoScalingGroup-1FHUVUJ7SLPU7            AWS::AutoScaling::AutoScalingGroup  asg2\n</code></pre>"},{"location":"command-reference/#stack-asg-instances","title":"stack-asg-instances","text":"<p>List EC2 Instances of EC2 Autoscaling Groups in Stack(s)</p> <pre><code>USAGE: stack-asg-instances stack [stack]\n\n$ stacks | stack-asg-instances\ni-06ee900565652ecc5  ami-0119aa4d67e59007c  t3.nano  running  asg-bash-my-aws  2019-12-13T03:15:22.000Z  ap-southeast-2c  vpc-deb8edb9\ni-01c7edb986c18c16a  ami-0119aa4d67e59007c  t3.nano  running  asg2             2019-12-13T03:37:51.000Z  ap-southeast-2c  vpc-deb8edb9\n</code></pre>"},{"location":"command-reference/#stack-elbs","title":"stack-elbs","text":"<p>List EC2 Elastic Load Balancers in Stack(s)</p> <p>USAGE: stack-elbs stack [stack]</p> <pre><code>$ stacks | stack-elbs\nelb-MyLoadBalancer-NA5S72MLA5KI   AWS::ElasticLoadBalancing::LoadBalancer  elb-stack-1\nload-bala-MyLoadBa-11HZ0DHUHJZZI  AWS::ElasticLoadBalancing::LoadBalancer  elb-stack-2\n</code></pre>"},{"location":"command-reference/#stack-instances","title":"stack-instances","text":"<p>List instances in stack(s)</p> <pre><code>USAGE: stack-instances stack [stack]\n\n$ stacks | stack-instances\ni-7d54924538baa7a1f  ami-123456789012  t3.nano  stopped  ec2             2019-12-11T09:31:03.000Z  ap-southeast-2a  None\ni-c54279c6055c3c794  ami-123456789012  t3.nano  running  nagios          2019-12-13T02:24:30.000Z  ap-southeast-2a  None\ni-a8b8dd6783e1a40cc  ami-123456789012  t3.nano  running  postgres1       2019-12-13T02:24:32.000Z  ap-southeast-2a  None\ni-5d74753e210bfe04d  ami-123456789012  t3.nano  running  postgres2       2019-12-13T02:24:34.000Z  ap-southeast-2a  None\ni-2aa95cc214a461398  ami-123456789012  t3.nano  running  prometheus-web  2019-12-13T02:24:36.000Z  ap-southeast-2a  None\n</code></pre>"},{"location":"command-reference/#stack-parameters","title":"stack-parameters","text":"<p>List parameters of stack</p>"},{"location":"command-reference/#stack-status","title":"stack-status","text":"<p>List status of stack</p>"},{"location":"command-reference/#stack-tag","title":"stack-tag","text":"<p>Return selected stack tag</p>"},{"location":"command-reference/#stack-tail","title":"stack-tail","text":"<p>Show all events for CF stack until update completes or fails.</p>"},{"location":"command-reference/#stack-template","title":"stack-template","text":"<p>Return template of a stack</p>"},{"location":"command-reference/#stack-tags","title":"stack-tags","text":"<p>List stack-tags applied to a stack</p>"},{"location":"command-reference/#stack-tags-text","title":"stack-tags-text","text":"<p>List stack-tags applied to a stack on a single line</p>"},{"location":"command-reference/#stack-outputs","title":"stack-outputs","text":"<p>List outputs of a stack</p>"},{"location":"command-reference/#stack-validate","title":"stack-validate","text":"<p>Validate a stack template</p>"},{"location":"command-reference/#stack-diff","title":"stack-diff","text":"<p>Compare live stack against local template (and optional params file)</p> <pre><code>USAGE: stack-diff stack [template-file]\n\n$ stack-diff params/asg-params-prod.json\nResolved arguments: asg-prod ./asg.yml params/asg-params-prod.json\ntemplate for stack (asg-prod) and contents of file (./asg.yml) are the same\n\nResolved arguments: asg-prod ./asg.yml params/asg-params-prod.json\n--- params\n+++ params/asg-params-prod.json\n@@ -1,11 +1,11 @@\n [\n   {\n     \"ParameterKey\": \"AsgMaxSize\",\n-    \"ParameterValue\": \"5\"\n+    \"ParameterValue\": \"2\"\n   },\n   {\n     \"ParameterKey\": \"AsgMinSize\",\n-    \"ParameterValue\": \"0\"\n+    \"ParameterValue\": \"1\"\n   },\n   {\n     \"ParameterKey\": \"InstanceType\",\n</code></pre> <p>report changes which would be made to stack if template were applied report on what changes would be made to stack by applying params Derive and check arguments for:</p> <ul> <li>stack-create</li> <li>stack-delete</li> <li>stack-diff</li> </ul> <p>In the interests of making the functions simple and a shallow read, it's unusual for us to abstract out shared code like this. This bit is doing some funky stuff though and I think it deserves to go in it's own function to DRY (Don't Repeat Yourself) it up a bit.</p> <p>This function takes the unusual approach of writing to variables of the calling function:</p> <ul> <li>stack</li> <li>template</li> <li>params</li> </ul> <p>This is generally not good practice for readability and unexpected outcomes. To contain this, the calling functions all clearly declare these three variables as local and contain a comment that they will be set by this function.</p> <p>If we are working from a single argument (ignore args starting with <code>--</code>) Strip path and extension from template Deduce params filename from stack and template names Strip path and extension from template File extension gets stripped off if template name provided as stack name Determine name of template to use determine name of params file to use determine what (if any) capabilities a given stack was deployed with</p>"},{"location":"command-reference/#instance-commands","title":"instance-commands","text":""},{"location":"command-reference/#instances","title":"instances","text":"<p>List EC2 Instances</p> <pre><code>$ instances\ni-4e15ece1de1a3f869  ami-123456789012  t3.nano  running  nagios          2019-12-10T08:17:18.000Z  ap-southeast-2a  None\ni-89cefa9403373d7a5  ami-123456789012  t3.nano  running  postgres1       2019-12-10T08:17:20.000Z  ap-southeast-2a  None\ni-806d8f1592e2a2efd  ami-123456789012  t3.nano  running  postgres2       2019-12-10T08:17:22.000Z  ap-southeast-2a  None\ni-61e86ac6be1e2c193  ami-123456789012  t3.nano  running  prometheus-web  2019-12-10T08:17:24.000Z  ap-southeast-2a  None\n</code></pre> <p>Optionally provide a filter string for a <code>| grep</code> effect with tighter columisation:</p> <pre><code>$ instances postgres\ni-89cefa9403373d7a5  ami-123456789012  t3.nano  running  postgres1  2019-12-10T08:17:20.000Z  ap-southeast-2a  None\ni-806d8f1592e2a2efd  ami-123456789012  t3.nano  running  postgres2  2019-12-10T08:17:22.000Z  ap-southeast-2a  None\n</code></pre>"},{"location":"command-reference/#instance-asg","title":"instance-asg","text":"<p>List autoscaling group membership of EC2 Instance(s)</p> <pre><code>USAGE: instance-asg instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-az","title":"instance-az","text":"<p>List availability zone of EC2 Instance(s)</p> <pre><code>USAGE: instance-az instance-id [instance-id]\n\n$ instances postgres | instance-az\ni-89cefa9403373d7a5  ap-southeast-2a\ni-806d8f1592e2a2efd  ap-southeast-2a\n</code></pre>"},{"location":"command-reference/#instance-console","title":"instance-console","text":"<p>List console output of EC2 Instance(s)</p> <pre><code>USAGE: instance-console instance-id [instance-id]\n\n$ instances postgres | instance-console\nConsole output for EC2 Instance i-89cefa9403373d7a5\nLinux version 2.6.16-xenU (builder@patchbat.amazonsa) (gcc version 4.0.1 20050727 (Red Hat 4.0.1-5)) #1 SMP Thu Oct 26 08:41:26 SAST 2006\nBIOS-provided physical RAM map:\nXen: 0000000000000000 - 000000006a400000 (usable)\n...snip...\n\nConsole output for EC2 Instance i-806d8f1592e2a2efd\nLinux version 2.6.16-xenU (builder@patchbat.amazonsa) (gcc version 4.0.1 20050727 (Red Hat 4.0.1-5)) #1 SMP Thu Oct 26 08:41:26 SAST 2006\nBIOS-provided physical RAM map:\nXen: 0000000000000000 - 000000006a400000 (usable)\n...snip...\n</code></pre>"},{"location":"command-reference/#instance-dns","title":"instance-dns","text":"<p>List DNS name of EC2 Instance(s)</p> <pre><code>USAGE: instance-dns instance-id [instance-id]\n\n$ instances postgres | instance-dns\ni-89cefa9403373d7a5  ip-10-155-35-61.ap-southeast-2.compute.internal   ec2-54-214-206-114.ap-southeast-2.compute.amazonaws.com\ni-806d8f1592e2a2efd  ip-10-178-243-63.ap-southeast-2.compute.internal  ec2-54-214-244-90.ap-southeast-2.compute.amazonaws.com\n</code></pre>"},{"location":"command-reference/#instance-health-set-unhealthy","title":"instance-health-set-unhealthy","text":"<p>Mark EC2 Instance(s) as unhealthy (to trigger replacement by ASG)</p> <pre><code>USAGE: instance-health-set-unhealthy instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-iam-profile","title":"instance-iam-profile","text":"<p>List iam-profile of EC2 Instance(s)</p> <pre><code>USAGE: instance-iam-profile instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-ip","title":"instance-ip","text":"<p>List ip address of EC2 Instance(s)</p> <pre><code>USAGE: instance-ip instance-id [instance-id]\n\n$ instances postgres | instance-ip\ni-89cefa9403373d7a5  10.155.35.61   54.214.206.114\ni-806d8f1592e2a2efd  10.178.243.63  54.214.244.90\n</code></pre>"},{"location":"command-reference/#instance-ssh","title":"instance-ssh","text":"<p>Establish SSH connection to EC2 Instance(s)</p> <pre><code>USAGE: instance-ssh [login] [instance-id] [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-ssh-details","title":"instance-ssh-details","text":"<p>List details needed to SSH into EC2 Instance(s)</p> <pre><code>USAGE: instance-ssh-details [login] [instance-id] [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-ssm","title":"instance-ssm","text":"<p>Establish SSM connection to EC2 Instance(s)</p> <pre><code>USAGE: instance-ssm instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-rdp","title":"instance-rdp","text":""},{"location":"command-reference/#instance-ssm-port-forward","title":"instance-ssm-port-forward","text":"<p>Create tunnel from localhost to remote EC2 instance</p> <pre><code>USAGE: instance-ssm-port-forward local_port_number port_number instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-stack","title":"instance-stack","text":"<p>List CloudFormation stack EC2 Instance(s) belong to (if any)</p> <pre><code>USAGE: instance-stack instance-id [instance-id]\n\n$ instances postgres | instance-stack\npostgres1  i-89cefa9403373d7a5\npostgres2  i-806d8f1592e2a2efd\n</code></pre>"},{"location":"command-reference/#instance-start","title":"instance-start","text":"<p>Start stopped EC2 Instance(s)</p> <pre><code>USAGE: instance-start instance-id [instance-id]\n\n$ instances postgres | instance-start\ni-a8b8dd6783e1a40cc  PreviousState=stopped  CurrentState=pending\ni-5d74753e210bfe04d  PreviousState=stopped  CurrentState=pending\n</code></pre>"},{"location":"command-reference/#instance-state","title":"instance-state","text":"<p>List state of EC2 Instance(s)</p> <pre><code>USAGE: instance-state instance-id [instance-id]\n\n$ instances postgres | instance-state\ni-89cefa9403373d7a5  running\ni-806d8f1592e2a2efd  running\n</code></pre>"},{"location":"command-reference/#instance-stop","title":"instance-stop","text":"<p>Stop EC2 Instance(s)</p> <pre><code>USAGE: instance-stop instance-id [instance-id]\n\n$ instances postgres | instance-stop\n\ni-a8b8dd6783e1a40cc  PreviousState=running  CurrentState=stopping\ni-5d74753e210bfe04d  PreviousState=running  CurrentState=stopping\n</code></pre>"},{"location":"command-reference/#instance-subnet","title":"instance-subnet","text":"<p>List subnet for EC2 Instance(s)</p> <pre><code>USAGE: instance-subnets instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-stop-protection","title":"instance-stop-protection","text":"<p>List current state of Stop Protection for EC2 Instance(s)</p> <pre><code>USAGE: instance-stop-protection instance-id [instance-id]\n\n$ instances | instance-termination-protection\ni-4e15ece1de1a3f869 DisableApiStop=true\ni-89cefa9403373d7a5 DisableApiStop=false\ni-806d8f1592e2a2efd DisableApiStop=false\ni-61e86ac6be1e2c193 DisableApiStop=false\n</code></pre>"},{"location":"command-reference/#instance-stop-protection-disable","title":"instance-stop-protection-disable","text":"<p>Disable EC2 Instance stop protection</p> <pre><code>USAGE: instance-stop-protection-disable instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-stop-protection-enable","title":"instance-stop-protection-enable","text":"<p>Enable EC2 Instance stop protection</p> <pre><code>USAGE: instance-stop-protection-enable instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-tags","title":"instance-tags","text":"<p>List tags applied EC2 Instance(s)</p> <pre><code>USAGE: instance-tags instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-tag","title":"instance-tag","text":"<p>List named tag on EC2 Instance(s)</p> <pre><code>USAGE: instance-tag key instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-tag-create","title":"instance-tag-create","text":"<p>Create/update tag on EC2 Instance(s)</p> <pre><code>USAGE: instance-tag-create key value instance [instance]\n</code></pre>"},{"location":"command-reference/#instance-tag-delete","title":"instance-tag-delete","text":"<p>Delete tag from EC2 Instance(s)</p> <pre><code>USAGE: instance-tag-delete key instance [instance]\n</code></pre>"},{"location":"command-reference/#instance-terminate","title":"instance-terminate","text":"<p>Terminate EC2 Instance(s)</p> <pre><code>USAGE: instance-terminate instance-id [instance-id]\n\n$ instances | head -3 | instance-terminate\nYou are about to terminate the following instances:\ni-01c7edb986c18c16a  ami-0119aa4d67e59007c  t3.nano  terminated  asg2  2019-12-13T03:37:51.000Z  ap-southeast-2c  None\ni-012dded46894dfa04  ami-0119aa4d67e59007c  t3.nano  running     ec2   2019-12-13T10:12:55.000Z  ap-southeast-2b  vpc-deb8edb9\nAre you sure you want to continue? y\ni-06ee900565652ecc5  PreviousState=terminated  CurrentState=terminated\ni-01c7edb986c18c16a  PreviousState=terminated  CurrentState=terminated\ni-012dded46894dfa04  PreviousState=running     CurrentState=shutting-down\n</code></pre>"},{"location":"command-reference/#instance-termination-protection","title":"instance-termination-protection","text":"<p>List current state of Termination Protection for EC2 Instance(s)</p> <pre><code>USAGE: instance-termination-protection instance-id [instance-id]\n\n$ instances | instance-termination-protection\ni-4e15ece1de1a3f869 DisableApiTermination=true\ni-89cefa9403373d7a5 DisableApiTermination=false\ni-806d8f1592e2a2efd DisableApiTermination=false\ni-61e86ac6be1e2c193 DisableApiTermination=false\n</code></pre>"},{"location":"command-reference/#instance-termination-protection-disable","title":"instance-termination-protection-disable","text":"<p>Disable EC2 Instance termination protection</p> <pre><code>USAGE: instance-termination-protection-disable instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-termination-protection-enable","title":"instance-termination-protection-enable","text":"<p>Enable EC2 Instance termination protection</p> <pre><code>USAGE: instance-termination-protection-enable instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-type","title":"instance-type","text":"<p>List type of instance(s)</p> <pre><code>USAGE: instance-type instance-id [instance-id]\n\n$ instances | instance-type\ni-4e15ece1de1a3f869  t3.nano\ni-89cefa9403373d7a5  t3.nano\ni-806d8f1592e2a2efd  t3.nano\ni-61e86ac6be1e2c193  t3.nano\n</code></pre>"},{"location":"command-reference/#instance-userdata","title":"instance-userdata","text":"<p>List userdata for instance(s)</p> <pre><code>USAGE: instance-userdata instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#instance-volumes","title":"instance-volumes","text":"<p>List volumes of instance(s)</p> <pre><code>USAGE: instance-volumes instance-id [instance-id]\n\n$ instances postgres | instance-volumes\ni-89cefa9403373d7a5  vol-cf5ddae9\ni-806d8f1592e2a2efd  vol-38fd45c3\n</code></pre>"},{"location":"command-reference/#instance-vpc","title":"instance-vpc","text":"<p>List VPC of instance(s)</p> <pre><code>USAGE: instance-vpcs instance-id [instance-id]\n</code></pre>"},{"location":"command-reference/#asg-commands","title":"asg-commands","text":""},{"location":"command-reference/#asg-detach-instances","title":"asg-detach-instances","text":"<p>Detach all instances from asg(s)</p>"},{"location":"command-reference/#asgs","title":"asgs","text":"<p>List EC2 Autoscaling Groups</p>"},{"location":"command-reference/#asg-capacity","title":"asg-capacity","text":"<p>List min, desired and maximum capacities of EC2 Autoscaling Group(s)</p>"},{"location":"command-reference/#asg-desired-size-set","title":"asg-desired-size-set","text":"<p>Set desired capacity of autoscaling group(s)</p>"},{"location":"command-reference/#asg-instances","title":"asg-instances","text":"<p>List instances of autoscaling group(s)</p>"},{"location":"command-reference/#asg-launch-configuration","title":"asg-launch-configuration","text":"<p>List Launch Configurations of Autoscaling Group(s)</p>"},{"location":"command-reference/#launch-configurations","title":"launch-configurations","text":"<p>List Launch Configurations</p>"},{"location":"command-reference/#launch-configuration-asgs","title":"launch-configuration-asgs","text":"<p>List EC2 Autoscaling Groups of Launch Configuration(s)</p>"},{"location":"command-reference/#asg-max-size-set","title":"asg-max-size-set","text":"<p>Set maximum size of autoscaling group(s)</p>"},{"location":"command-reference/#asg-min-size-set","title":"asg-min-size-set","text":"<p>Set minimum size of autoscaling group(s)</p>"},{"location":"command-reference/#asg-processes_suspended","title":"asg-processes_suspended","text":"<p>List suspended processes of an autoscaling group</p>"},{"location":"command-reference/#asg-resume","title":"asg-resume","text":"<p>Resume all processes of an autoscaling group</p>"},{"location":"command-reference/#asg-suspend","title":"asg-suspend","text":"<p>Suspend all processes of an autoscaling group</p>"},{"location":"command-reference/#asg-stack","title":"asg-stack","text":"<p>List CloudFormation stack for asg(s)</p>"},{"location":"command-reference/#asg-scaling-activities","title":"asg-scaling-activities","text":"<p>List scaling activities for Autoscaling Group(s)</p> <p>azure.azcli</p>"},{"location":"command-reference/#azure-commands","title":"azure-commands","text":""},{"location":"command-reference/#debug","title":"debug","text":"<p>Construct a string to be passed to <code>grep -E</code></p> <pre><code>foo|bar|baz\n</code></pre>"},{"location":"command-reference/#skim-stdin-tsv","title":"skim-stdin-tsv","text":""},{"location":"command-reference/#skim-stdin-bma","title":"skim-stdin-bma","text":"<p>Append first token from each line of STDIN to argument list</p> <p>Implementation of <code>pipe-skimming</code> pattern.</p> <pre><code>$ stacks | skim-stdin foo bar\nfoo bar huginn mastodon grafana\n\n$ stacks\nhuginn    CREATE_COMPLETE  2020-01-11T06:18:46.905Z  NEVER_UPDATED  NOT_NESTED\nmastodon  CREATE_COMPLETE  2020-01-11T06:19:31.958Z  NEVER_UPDATED  NOT_NESTED\ngrafana   CREATE_COMPLETE  2020-01-11T06:19:47.001Z  NEVER_UPDATED  NOT_NESTED\n</code></pre> <p>Typical usage within Bash-my-AWS functions:</p> <pre><code>local asg_names=$(skim-stdin \"$@\") # Append to arg list\nlocal asg_names=$(skim-stdin)      # Only draw from STDIN\n</code></pre>"},{"location":"command-reference/#az-account","title":"az-account","text":""},{"location":"command-reference/#az-user","title":"az-user","text":""},{"location":"command-reference/#az-cache-items","title":"az-cache-items","text":""},{"location":"command-reference/#az-cache-item","title":"az-cache-item","text":"<p>Create arguments from output of az-cache-items() (if present)</p>"},{"location":"command-reference/#az-cache-item-delete","title":"az-cache-item-delete","text":"<p>Create arguments from output of az-cache-items() (if present)</p>"},{"location":"command-reference/#locations","title":"locations","text":""},{"location":"command-reference/#location","title":"location","text":""},{"location":"command-reference/#location-unset","title":"location-unset","text":""},{"location":"command-reference/#location-each","title":"location-each","text":""},{"location":"command-reference/#resource-groups","title":"resource-groups","text":""},{"location":"command-reference/#resource-group","title":"resource-group","text":""},{"location":"command-reference/#resource-group-export","title":"resource-group-export","text":""},{"location":"command-reference/#resource-group-unset","title":"resource-group-unset","text":""},{"location":"command-reference/#resources","title":"resources","text":""},{"location":"command-reference/#resourceids","title":"resourceids","text":""},{"location":"command-reference/#resource-show","title":"resource-show","text":""},{"location":"command-reference/#resource-diff","title":"resource-diff","text":""},{"location":"command-reference/#resource-export","title":"resource-export","text":""},{"location":"command-reference/#service-principals","title":"service-principals","text":""},{"location":"command-reference/#management-groups","title":"management-groups","text":""},{"location":"command-reference/#subscriptions","title":"subscriptions","text":""},{"location":"command-reference/#subscription","title":"subscription","text":""},{"location":"command-reference/#subscription-unset","title":"subscription-unset","text":""},{"location":"command-reference/#subscription-each","title":"subscription-each","text":"<p>Ported from BMA</p>"},{"location":"command-reference/#ad-groups","title":"ad-groups","text":"<p>Usage: ad-users REMOTE_STARTS_WITH_FILTER LOCAL_FILTER</p> <p>REMOTE_STARTS_WITH_FILTER: filters on start of userPrincipalName LOCAL_FILTER: grep results</p> <p>User Properties List Users columnise</p>"},{"location":"command-reference/#ad-group-members","title":"ad-group-members","text":"<p>List groups for AD User(s)</p> <pre><code>USAGE: ad-user-groups USER USER # object ID or principal name of the user\n\n$ ad-users mike.bailey@bash-my-aws.org | ad-user-groups\n</code></pre>"},{"location":"command-reference/#ad-users","title":"ad-users","text":"<p>Usage: ad-users REMOTE_STARTS_WITH_FILTER LOCAL_FILTER</p> <p>REMOTE_STARTS_WITH_FILTER: filters on start of userPrincipalName LOCAL_FILTER: grep results</p> <p>User Properties List Users columnise</p>"},{"location":"command-reference/#function","title":"function","text":"<p>ad-user-upns</p>"},{"location":"command-reference/#function_1","title":"function","text":"<p>ad-user-upns</p>"},{"location":"command-reference/#function_2","title":"function","text":"<p>ad-user-names</p>"},{"location":"command-reference/#ad-users-graph","title":"ad-users-graph","text":"<p>Usage: ad-users-graph REMOTE_STARTS_WITH_FILTER LOCAL_FILTER</p> <p>REMOTE_STARTS_WITH_FILTER: filters on start of userPrincipalName - https://learn.microsoft.com/en-us/cli/azure/format-output-azure-cli</p> <p>Uses graph API - more functionaility than azcli but limited result count</p> <p>$ time ad-users | wc -l 999 real    0m0.792s user    0m0.311s sys     0m0.047s</p> <p>User Properties List Users columnise # Disabled to preserve tabs</p>"},{"location":"command-reference/#ad-user-groups","title":"ad-user-groups","text":"<p>List groups for AD User(s)</p> <pre><code>USAGE: ad-user-groups USER USER # object ID or principal name of the user\n\n$ ad-users mike.bailey@bash-my-aws.org | ad-user-groups\n</code></pre>"},{"location":"command-reference/#ad-user-group-diff","title":"ad-user-group-diff","text":""},{"location":"command-reference/#ad-apps","title":"ad-apps","text":"<p>Usage: ad-apps REMOTE_FILTER LOCAL_FILTER</p> <p>REMOTE_FILTER: filters on start of displayName LOCAL_FILTER: grep results columnise</p>"},{"location":"command-reference/#ad-app","title":"ad-app","text":"<p>Usage: ad-app APP [APP]</p>"},{"location":"command-reference/#_1","title":"Bash-my-AWS Command Reference","text":"<p>ad-app-signins</p>"},{"location":"command-reference/#ad-app-owners","title":"ad-app-owners","text":"<p>Usage: ad-app-owners APP [APP]     --query '[].[       appId,       displayName,       createdDateTime       ]'                \\     --output tsv\"       |   grep -E -- \"$filters\" |   LC_ALL=C sort -t$'\\t' -b -k 3</p>"},{"location":"command-reference/#function_3","title":"function","text":"<p>connectors Usage: connectors REMOTE_FILTER LOCAL_FILTER</p> <p>REMOTE_FILTER: filters on start of machineName LOCAL_FILTER: grep results</p>"},{"location":"command-reference/#function_4","title":"function","text":"<p>connector-groups Usage: connector-groups REMOTE_FILTER LOCAL_FILTER</p> <p>REMOTE_FILTER: filters on start of displayName LOCAL_FILTER: grep results</p>"},{"location":"command-reference/#function_5","title":"function","text":"<p>connector-group-apps Usage: connector-group-apps CONNECTOR_GROUP [CONNECTOR_GROUP]</p>"},{"location":"command-reference/#function_6","title":"function","text":"<p>connector-group-members Usage: connector-group-apps CONNECTOR_GROUP [CONNECTOR_GROUP]</p>"},{"location":"command-reference/#deployments-group","title":"deployments-group","text":""},{"location":"command-reference/#afds","title":"afds","text":""},{"location":"command-reference/#afd-endpoints","title":"afd-endpoints","text":""},{"location":"command-reference/#afd-routes","title":"afd-routes","text":"<p>List routes of all endpoints for Front Door Profile(s)</p>"},{"location":"command-reference/#afd-custom-domains","title":"afd-custom-domains","text":""},{"location":"command-reference/#afd-custom-domains-validation-request","title":"afd-custom-domains-validation-request","text":""},{"location":"command-reference/#afd-origin-groups","title":"afd-origin-groups","text":""},{"location":"command-reference/#afd-waf-policies","title":"afd-waf-policies","text":""},{"location":"command-reference/#afd-waf-policy-rules","title":"afd-waf-policy-rules","text":""},{"location":"command-reference/#afd-waf-policy","title":"afd-waf-policy","text":""},{"location":"command-reference/#afd-waf-policy-rule-match-conditions","title":"afd-waf-policy-rule-match-conditions","text":""},{"location":"command-reference/#afd-waf-policy-rule-match-condition-values","title":"afd-waf-policy-rule-match-condition-values","text":""},{"location":"command-reference/#afd-waf-policy-rule-delete","title":"afd-waf-policy-rule-delete","text":""},{"location":"command-reference/#deployment-groups","title":"deployment-groups","text":""},{"location":"command-reference/#deployment-delete-danger","title":"deployment-delete-danger","text":""},{"location":"command-reference/#cert-commands","title":"cert-commands","text":""},{"location":"command-reference/#certs","title":"certs","text":"<p>List ACM Certificates</p>"},{"location":"command-reference/#certs-arn","title":"certs-arn","text":"<p>Same as <code>certs</code> but with the ARN in first column</p>"},{"location":"command-reference/#cert-users","title":"cert-users","text":"<p>List resources using ACM Cert(s)</p> <pre><code>USAGE: cert-users cert-arn [cert-arn]\n</code></pre>"},{"location":"command-reference/#cert-delete","title":"cert-delete","text":"<p>Delete ACM Cert(s)</p> <pre><code>USAGE: cert-delete cert-arn [cert-arn]\n</code></pre>"},{"location":"command-reference/#cert-ificate","title":"cert-ificate","text":"<p>Return Certificate for ACM Cert(s)</p> <pre><code>USAGE: cert-ificate cert-arn [cert-arn]\n</code></pre>"},{"location":"command-reference/#cert-chain","title":"cert-chain","text":"<p>Return Cert Chain for ACM Cert(s)</p> <pre><code>USAGE: cert-chain cert-arn [cert-arn]\n</code></pre>"},{"location":"command-reference/#cert-verify","title":"cert-verify","text":"<p>Verify ACM cert(s)</p> <pre><code>USAGE: cert-chain cert-arn [cert-arn]\n</code></pre> <p>Be quiet - makes it easier to scan with \"cert-arns | cert_verify\"</p>"},{"location":"command-reference/#cloudfront-commands","title":"cloudfront-commands","text":""},{"location":"command-reference/#distributions","title":"distributions","text":"<p>List Cloudfront Distributions</p>"},{"location":"command-reference/#cloudtrail-commands","title":"cloudtrail-commands","text":""},{"location":"command-reference/#cloudtrails","title":"cloudtrails","text":"<p>List Cloudtrails</p> <pre><code>$ cloudtrails\nfailmode    failmode-cloudtrail ap-southeast-2  IsMultiRegionTrail=true IncludeGlobalServiceEvents=true\n</code></pre>"},{"location":"command-reference/#cloudtrail-status","title":"cloudtrail-status","text":"<p>List logging status of Cloudtrails</p> <pre><code>USAGE: cloudtrail-status cloudtrail [cloudtrail]\n</code></pre>"},{"location":"command-reference/#ecr-commands","title":"ecr-commands","text":""},{"location":"command-reference/#ecr-repositories","title":"ecr-repositories","text":"<p>List ECR Repositories</p>"},{"location":"command-reference/#ecr-repository-images","title":"ecr-repository-images","text":"<p>List images for ECR Repositories</p>"},{"location":"command-reference/#elb-commands","title":"elb-commands","text":""},{"location":"command-reference/#elbs","title":"elbs","text":"<p>List ELBs Accepts LoadBalancer names on STDIN and converts to LoadBalancer names</p> <pre><code>$ elbs\nelb-MyLoadBalancer-1FNISWJN0W6N9  2019-12-13T10:24:55.220Z\nanother-e-MyLoadBa-171CPCZF2E84T  2019-12-13T10:25:24.300Z\n</code></pre>"},{"location":"command-reference/#elb-dnsname","title":"elb-dnsname","text":"<p>List DNS Names of ELB(s)</p> <pre><code> USAGE: elb-dnsname load-balancer [load-balancer]\n\n $ elbs | elb-dnsname\n elb-MyLoadBalancer-1FNISWJN0W6N9  elb-MyLoadBalancer-1FNISWJN0W6N9-563832045.ap-southeast-2.elb.amazonaws.com\n another-e-MyLoadBa-171CPCZF2E84T  another-e-MyLoadBa-171CPCZF2E84T-1832721930.ap-southeast-2.elb.amazonaws.com\n</code></pre>"},{"location":"command-reference/#elb-instances","title":"elb-instances","text":"<p>List instances of ELB(s)</p> <pre><code> USAGE: elb-instances load-balancer [load-balancer]\n</code></pre>"},{"location":"command-reference/#elb-stack","title":"elb-stack","text":"<p>List CloudFormation stack names of ELB(s)</p> <pre><code>USAGE: elb-stack load-balancer [load-balancer]\n\n$ elbs | elb-stack\nelb          elb-MyLoadBalancer-1FNISWJN0W6N9\nanother-elb  another-e-MyLoadBa-171CPCZF2E84T\n</code></pre>"},{"location":"command-reference/#elb-subnets","title":"elb-subnets","text":"<p>List subnets of ELB(s)</p> <pre><code>USAGE: elb-subnets load-balancer [load-balancer]\n\n$ elbs | elb-subnets\nrails-demo-ELB-FRBEQPCYSZQD  subnet-5e257318 subnet-7828cd0f subnet-c25fa0a7\nhuginn-ELB-BMD0QUX179PK      subnet-5e257318 subnet-7828cd0f subnet-c25fa0a7\nprometheus-ELB-C0FGVLGQ64UH  subnet-5e257318 subnet-7828cd0f subnet-c25fa0a7\n</code></pre>"},{"location":"command-reference/#elb-azs","title":"elb-azs","text":"<p>List Availability Zones of ELB(s)</p> <pre><code>USAGE: elb-azs load-balancer [load-balancer]\n\n$ elbs | elb-azs\nrails-demo-ELB-FRBEQPCYSZQD  ap-southeast-2a ap-southeast-2b ap-southeast-2c\nhuginn-ELB-BMD0QUX179PK      ap-southeast-2a ap-southeast-2b ap-southeast-2c\n</code></pre>"},{"location":"command-reference/#elb-tags","title":"elb-tags","text":"<p>List tags applied ELB(s)</p> <pre><code>USAGE: elb-tags elb-id [elb-id]\n</code></pre>"},{"location":"command-reference/#elb-tag","title":"elb-tag","text":"<p>List named tag on ELB(s)</p> <pre><code>USAGE: elb-tag key elb-id [elb-id]\n</code></pre>"},{"location":"command-reference/#elbv2-commands","title":"elbv2-commands","text":""},{"location":"command-reference/#elbv2s","title":"elbv2s","text":"<p>List EC2 ELBv2 load balancers (both Network and Application types) Accepts Load Balancer names on STDIN and converts to Network Load Balancer names</p> <pre><code>$ elbv2s\nbash-my-aws      network      internet-facing  active        2020-01-04T11:18:49.733Z\nbash-my-aws-alb  application  internet-facing  provisioning  2020-01-04T11:29:45.030Z\n</code></pre>"},{"location":"command-reference/#elbv2-dnsname","title":"elbv2-dnsname","text":"<p>List DNS Names of elbv2(s)</p> <pre><code>USAGE: elbv2-dnsname load-balancer [load-balancer]\n\n$ elbv2s | elbv2-dnsname\nbash-my-aws      bash-my-aws-c23c598688520e51.elb.ap-southeast-2.amazonaws.com\nbash-my-aws-alb  bash-my-aws-alb-2036199590.ap-southeast-2.elb.amazonaws.com\n</code></pre>"},{"location":"command-reference/#elbv2-subnets","title":"elbv2-subnets","text":"<p>List subnets of ELBv2(s) [Application and Network Load Balancers)</p> <pre><code>USAGE: elbv2-subnets load-balancer [load-balancer]\n\n$ elbv2s | elbv2-subnets\nbash-my-aws      subnet-c25fa0a7\nbash-my-aws-alb  subnet-7828cd0f subnet-c25fa0a7\n</code></pre>"},{"location":"command-reference/#elbv2-azs","title":"elbv2-azs","text":"<p>List Availability Zones of ELB(s)</p> <pre><code>USAGE: elb-azs load-balancer [load-balancer]\n\n$ elbv2s | elbv2-subnets\nbash-my-aws      ap-southeast-2a\nbash-my-aws-alb  ap-southeast-2a ap-southeast-2b\n</code></pre>"},{"location":"command-reference/#elbv2-target-groups","title":"elbv2-target-groups","text":"<p>List target groups of ELBv2(s) [Application and Network Load Balancers)</p> <pre><code>USAGE: elbv2-target-groups load-balancer [load-balancer]\n\n$ elbv2s | elbv2-target-groups\nbash-my-aws-nlb-tg  TCP   22   vpc-018d9739  bash-my-aws-nlb\nbash-my-aws-alb-tg  HTTP  443  vpc-018d9739  bash-my-aws-alb\n</code></pre>"},{"location":"command-reference/#iam-commands","title":"iam-commands","text":""},{"location":"command-reference/#iam-roles","title":"iam-roles","text":"<p>List IAM Roles</p> <pre><code>$ iam-roles\nconfig-role-ap-southeast-2               AROAI3QHAU3J2CDRNLQHD  2017-02-02T03:03:02Z\nAWSBatchServiceRole                      AROAJJWRGUPTRXTV52TED  2017-03-09T05:31:39Z\necsInstanceRole                          AROAJFQ3WMZXESGIKW5YD  2017-03-09T05:31:39Z\n</code></pre>"},{"location":"command-reference/#iam-role-principal","title":"iam-role-principal","text":"<p>List role principal for IAM Role(s)</p> <pre><code>USAGE: iam-role-principal role-name [role-name]\n</code></pre>"},{"location":"command-reference/#iam-users","title":"iam-users","text":"<p>List IAM Users</p> <pre><code>$ iam-users\nconfig-role-ap-southeast-2               AROAI3QHAU3J2CDRNLQHD  2017-02-02T03:03:02Z\nAWSBatchServiceRole                      AROAJJWRGUPTRXTV52TED  2017-03-09T05:31:39Z\necsInstanceRole                          AROAJFQ3WMZXESGIKW5YD  2017-03-09T05:31:39Z\n</code></pre>"},{"location":"command-reference/#image-commands","title":"image-commands","text":""},{"location":"command-reference/#images","title":"images","text":"<p>List EC2 AMI's</p> <p>Usage: images [owner] [image-id] [image-id]...</p> <p>owner defaults to <code>self</code> or can one or more of:</p> <ul> <li>an AWS_ACCOUNT_ID  (e.g. 1234567890)</li> <li>an AWS_OWNER_ALIAS (amazon, amazon-marketplace, microsoft)</li> </ul> <p>image_id can be one or more AMIs</p> <p>Trialing a different approach for grabbing resource ids from input. As normal, you can pipe resource ids in as first token on each line. We treat all args that don't start with ami- as owner identifiers.</p> <p>Trialing a new pattern for output - putting the Name at the end. This is more like the output of <code>ls -la</code></p> <ul> <li>Pro: Preceding fields tend to be of the same length</li> <li>Pro: Easier for eyes to scan final column for names(?)</li> <li>Con: Using this pattern for instances() would put name past 80 char point</li> <li>Con: Migrating instances() to this output is A Big Change (not made lightly)</li> </ul>"},{"location":"command-reference/#image-deregister","title":"image-deregister","text":"<p>Deregister AMI(s)</p> <pre><code>USAGE: image-deregister image_id [image_id]\n</code></pre>"},{"location":"command-reference/#keypair-commands","title":"keypair-commands","text":""},{"location":"command-reference/#keypairs","title":"keypairs","text":"<p>List EC2 SSH Keypairs in current Region</p> <pre><code>$ keypairs\nalice  8f:85:9a:1e:6c:76:29:34:37:45:de:7f:8d:f9:70:eb\nbob    56:73:29:c2:ad:7b:6f:b6:f2:f3:b4:de:e4:2b:12:d4\n</code></pre>"},{"location":"command-reference/#keypair-create","title":"keypair-create","text":"<p>Create SSH Keypair on local machine and import public key into new EC2 Keypair.</p> <p>Provides benefits over AWS creating the keypair:</p> <ul> <li>Amazon never has access to private key.</li> <li>Private key is protected with passphrase before being written to disk.</li> <li>Keys is written to ~/.ssh with correct file permissions.</li> <li> <p>You control the SSH Key type (algorithm, length, etc).</p> <p>USAGE: keypair-create [key_name] [key_dir]</p> <p>$ keypair-create yet-another-keypair Creating /home/m/.ssh/yet-another-keypair Generating public/private rsa key pair. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/m/.ssh/yet-another-keypair. Your public key has been saved in /home/m/.ssh/yet-another-keypair.pub. The key fingerprint is: SHA256:zIpbxLo7rpQvKyezOLATk96B1kSL0QP41q6x8tUrySk m@localhost.localdomain The key's randomart image is: +---[RSA 4096]----+ |..o              | |.. +             | | .+.o            | | .oo.. o         | | o+.  o S        | |=o.+.= .         | |+++==o+          | |XoE++ .         | |o@+*+.          | +----[SHA256]-----+ {     \"KeyFingerprint\": \"21:82:f9:5b:79:d6:dc:0f:7b:79:43:7c:c5:34:6c:2d\",     \"KeyName\": \"yet-another-keypair\" }</p> </li> </ul> <p>Note</p> <p>KeyPair Name defaults to \"$(aws-account-alias)-$(region)\" if none provided</p>"},{"location":"command-reference/#keypair-delete","title":"keypair-delete","text":"<p>Delete EC2 SSH Keypairs by providing their names as arguments or via STDIN</p> <pre><code>USAGE: keypair-delete key_name [key_name]\n\n$ keypair-delete alice bob\nYou are about to delete the following EC2 SSH KeyPairs:\nalice\nbob\nAre you sure you want to continue? y\n\n$ keypairs | keypair-delete\nYou are about to delete the following EC2 SSH KeyPairs:\nyet-another-keypair\nAre you sure you want to continue? y\n</code></pre>"},{"location":"command-reference/#kms-commands","title":"kms-commands","text":""},{"location":"command-reference/#kms-encrypt","title":"kms-encrypt","text":"<p>Encrypt and base64 encode STDIN or file</p> <pre><code>USAGE: kms-encrypt key_id/alias_id [plaintext_file]\n\n$ echo foobar | kms-encrypt alias/default\nAQICAHgcyN4vd3V/OB7NKI6IMbpENEu1+UfyiU...\n</code></pre>"},{"location":"command-reference/#kms-decrypt","title":"kms-decrypt","text":"<p>base64 decode and decrypt KMS Encrypted file or STDIN</p> <pre><code>USAGE: kms-decrypt [ciphertext_file]\n\n$ kms-decrypt ciphertext.txt\nfoobar\n\n$ echo foobar | kms-encrypt alias/default | kms-decrypt\nfoobar\n</code></pre>"},{"location":"command-reference/#kms-aliases","title":"kms-aliases","text":"<p>List KMS Aliases</p> <pre><code>$ kms-aliases default\nalias/default  d714a175-db12-4574-8f27-aa071a1dfd8a  arn:aws:kms:ap-southeast-2:089834043791:alias/default\n</code></pre>"},{"location":"command-reference/#kms-alias-create","title":"kms-alias-create","text":"<p>Create alias for KMS Key</p> <pre><code>USAGE: kms-alias-create alias_name key_id\n\n$ kms-keys | tail -1\nd714a175-db12-4574-8f27-aa071a1dfd8a\n\n$ kms-keys | tail -1 | kms-alias-create alias/foobar\n\n$ kms-aliases foobar\nalias/foobar  d714a175-db12-4574-8f27-aa071a1dfd8a  arn:aws:kms:ap-southeast-2:089834043791:alias/foobar\n</code></pre>"},{"location":"command-reference/#kms-alias-delete","title":"kms-alias-delete","text":"<p>Delete alias for KMS Key</p> <pre><code>USAGE: kms-alias-delete alias_name [alias_name]\n\n$ kms-aliases foobar | kms-alias-delete\nYou are about to delete the following kms aliases:\nalias/foobar\nAre you sure you want to continue? y\n</code></pre>"},{"location":"command-reference/#kms-keys","title":"kms-keys","text":"<p>List KMS Keys</p> <pre><code>$ kms-keys\n5044958c-151d-4995-bed4-dd05c1385b48\n8ada3e65-e377-4435-a709-fbe75dfa1dd0\nd714a175-db12-4574-8f27-aa071a1dfd8a\n</code></pre>"},{"location":"command-reference/#kms-key-create","title":"kms-key-create","text":"<p>Create a KMS Key</p> <pre><code>$ kms-key-create\n9e94333b-8e85-497a-9791-e7c5edf9c35e\n</code></pre>"},{"location":"command-reference/#kms-key-details","title":"kms-key-details","text":"<p>List details for KMS Key(s)</p>"},{"location":"command-reference/#kms-key-disable","title":"kms-key-disable","text":"<p>Disable KMS Key(s)</p> <pre><code>USAGE: kms-key-disable key_id [key_id]\n\n$ kms-key-disable  9e94333b-8e85-497a-9791-e7c5edf9c35e\n</code></pre>"},{"location":"command-reference/#kms-key-enable","title":"kms-key-enable","text":"<p>Enable KMS Key(s)</p> <pre><code>USAGE: kms-key-enable key_id [key_id]\n\n$ kms-key-enable  9e94333b-8e85-497a-9791-e7c5edf9c35e\n</code></pre>"},{"location":"command-reference/#lambda-commands","title":"lambda-commands","text":""},{"location":"command-reference/#lambda-functions","title":"lambda-functions","text":"<p>List lambda functions</p> <pre><code>$ lambda-functions\nstars    2019-12-18T10:00:00.000+0000  python2.7  256\nstripes  2019-12-19T10:21:42.444+0000  python3.7  128\n</code></pre>"},{"location":"command-reference/#lambda-function-memory","title":"lambda-function-memory","text":"<p>List memorySize for lambda function(s)</p> <pre><code>USAGE: lambda-function-memory function [function]\n</code></pre>"},{"location":"command-reference/#lambda-function-memory-set","title":"lambda-function-memory-set","text":"<p>Update memorySize for lambda function(s)</p> <pre><code>USAGE: lambda-function-memory-set memory function [function]\n</code></pre>"},{"location":"command-reference/#lambda-function-memory-step","title":"lambda-function-memory-step","text":"<p>Repeatedly update memorySize for lambda function(s)</p> <p>Useful for measuring impact of memory on cost/performance. The function increases memorySize by 64KB every two minutes until it reaches the value requested. There is a two minute delay between increases to provide time to collect data from function execution.</p> <pre><code>USAGE: lambda-function-memory-step memory function [function]\n</code></pre>"},{"location":"command-reference/#lambda-function-logs","title":"lambda-function-logs","text":""},{"location":"command-reference/#log-commands","title":"log-commands","text":""},{"location":"command-reference/#log-groups","title":"log-groups","text":"<p>List CloudWatch Log Groups</p> <pre><code>$ log-groups\n/aws/lambda/stars2  1576495961429  0   11736\n/aws/lambda/stars   1576566745961  0  107460\n/aws/lambda/walk    1576567300172  0   11794\n</code></pre>"},{"location":"command-reference/#rds-commands","title":"rds-commands","text":""},{"location":"command-reference/#rds-db-instances","title":"rds-db-instances","text":"<p>List RDS Database Instances Tip: Filter on whether DB is in cluster with: <code>awk -F'\\t' '$6 != \"None\"'</code></p>"},{"location":"command-reference/#rds-db-clusters","title":"rds-db-clusters","text":"<p>List RDS Database Clusters</p>"},{"location":"command-reference/#route53-commands","title":"route53-commands","text":""},{"location":"command-reference/#hosted-zones","title":"hosted-zones","text":"<p>List Route53 Hosted Zones</p> <pre><code>$ hosted-zones\n/hostedzone/Z3333333333333  5   NotPrivateZone  bash-my-aws.org.\n/hostedzone/Z5555555555555  2   NotPrivateZone  bash-my-universe.com.\n/hostedzone/Z4444444444444  3   NotPrivateZone  bashmyaws.org.\n/hostedzone/Z1111111111111  3   NotPrivateZone  bash-my-aws.com.\n/hostedzone/Z2222222222222  3   NotPrivateZone  bashmyaws.com.\n</code></pre>"},{"location":"command-reference/#hosted-zone-ns-records","title":"hosted-zone-ns-records","text":"<p>Generate NS records for delegating domain to AWS</p> <pre><code>$ hosted-zones bash-my-aws.org\n/hostedzone/ZJ6ZCG2UD6OKX  5  NotPrivateZone  bash-my-aws.org.\n\n$ hosted-zones bash-my-aws.org | hosted-zone-ns-records\nbash-my-aws.org. 300 IN NS  ns-786.awsdns-34.net.\nbash-my-aws.org. 300 IN NS  ns-1549.awsdns-01.co.uk.\nbash-my-aws.org. 300 IN NS  ns-362.awsdns-45.com.\nbash-my-aws.org. 300 IN NS  ns-1464.awsdns-55.org.\n</code></pre>"},{"location":"command-reference/#s3-commands","title":"s3-commands","text":""},{"location":"command-reference/#buckets","title":"buckets","text":"<p>List S3 Buckets</p> <pre><code>$ buckets\nweb-assets  2019-12-20  08:24:38.182045\nbackups     2019-12-20  08:24:44.351215\narchive     2019-12-20  08:24:57.567652\n</code></pre>"},{"location":"command-reference/#bucket-acls","title":"bucket-acls","text":"<p>List S3 Bucket Access Control Lists.</p> <pre><code>$ bucket-acls another-example-bucket\nanother-example-bucket\n</code></pre> <p>Note</p> <p>The only recommended use case for the bucket ACL is to grant write permission to the Amazon S3 Log Delivery group to write access log objects to your bucket. AWS docs</p>"},{"location":"command-reference/#bucket-remove","title":"bucket-remove","text":"<p>Remove an empty S3 Bucket.</p> <p>In this example the bucket is not empty.</p> <pre><code>$ bucket-remove another-example-bucket\nYou are about to remove the following buckets:\nanother-example-bucket  2019-12-07  06:51:12.022496\nAre you sure you want to continue? y\nremove_bucket failed: s3://another-example-bucket An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty\n</code></pre>"},{"location":"command-reference/#bucket-remove-force","title":"bucket-remove-force","text":"<p>Remove an S3 Bucket, and delete all objects if it's not empty.</p> <pre><code>$ bucket-remove-force another-example-bucket\nYou are about to delete all objects from and remove the following buckets:\nanother-example-bucket  2019-12-07  06:51:12.022496\nAre you sure you want to continue? y\ndelete: s3://another-example-bucket/aliases\nremove_bucket: another-example-bucket\n</code></pre>"},{"location":"command-reference/#secretsmanager-commands","title":"secretsmanager-commands","text":""},{"location":"command-reference/#secrets","title":"secrets","text":""},{"location":"command-reference/#sts-commands","title":"sts-commands","text":""},{"location":"command-reference/#sts-assume-role","title":"sts-assume-role","text":"<p>Assume an IAM Role</p> <pre><code>USAGE: sts-assume-role role_arn\n</code></pre>"},{"location":"command-reference/#tag-commands","title":"tag-commands","text":""},{"location":"command-reference/#tag-keys","title":"tag-keys","text":"<p>List unique set of tag keys in AWS Account / Region</p> <pre><code>USAGE: tag-keys\n</code></pre>"},{"location":"command-reference/#tag-values","title":"tag-values","text":"<p>List unique set of tag values for key in AWS Account / Region</p> <pre><code>USAGE: tag-values key\n</code></pre>"},{"location":"command-reference/#target-group-commands","title":"target-group-commands","text":""},{"location":"command-reference/#target-groups","title":"target-groups","text":"<p>List EC2 ELBv2 target groups</p> <pre><code>$ target-groups\nbash-my-aws-nlb-tg  TCP   22   vpc-04636ebe5573f6f65  instance  bash-my-aws-nlb\nbash-my-aws-alb-tg  HTTP  443  vpc-04636ebe5573f6f65  instance  bash-my-aws-alb\n</code></pre>"},{"location":"command-reference/#target-group-targets","title":"target-group-targets","text":"<p>List EC2 ELBv2 target group targets Accepts Target Group names on stdin or as arguments</p> <pre><code>$ target-group-targets bash-my-aws-nlb-tg\ni-4e15ece1de1a3f869  443  healthy    bash-my-aws-nlb-tg\ni-89cefa9403373d7a5  443  unhealthy  bash-my-aws-nlb-tg\n</code></pre>"},{"location":"command-reference/#vpc-commands","title":"vpc-commands","text":""},{"location":"command-reference/#pcxs","title":"pcxs","text":"<p>List VPC Peering connections</p>"},{"location":"command-reference/#subnets","title":"subnets","text":"<p>List subnets for all VPCs</p> <pre><code>$ subnets\nsubnet-34fd9cfa  vpc-018d9739  ap-southeast-2c  172.31.32.0/20  NO_NAME\nsubnet-8bb774fe  vpc-018d9739  ap-southeast-2a  172.31.0.0/20   NO_NAME\nsubnet-9eea2c07  vpc-018d9739  ap-southeast-2b  172.31.16.0/20  NO_NAME\n</code></pre>"},{"location":"command-reference/#vpcs","title":"vpcs","text":"<p>List VPCs</p> <pre><code>$ vpcs\nvpc-018d9739  default-vpc  NO_NAME  172.31.0.0/16  NO_STACK  NO_VERSION\n</code></pre>"},{"location":"command-reference/#vpc-azs","title":"vpc-azs","text":"<p>List availability zones of VPC(s)</p> <pre><code>USAGE: vpc-azs vpc-id [vpc-id]\n\n$ vpcs | vpc-azs\nvpc-018d9739 ap-southeast-2a ap-southeast-2b ap-southeast-2c\n</code></pre>"},{"location":"command-reference/#vpc-az-count","title":"vpc-az-count","text":"<p>List number of Availability Zones of VPC(s)</p> <pre><code>USAGE: vpc-az-count vpc-id [vpc-id]\n\n$ vpcs | vpc-az-count\nvpc-018d9739 3\n</code></pre>"},{"location":"command-reference/#vpc-lambda-functions","title":"vpc-lambda-functions","text":"<p>List lambda functions of VPC(s)</p> <pre><code>USAGE: vpc-lambda-functions vpc-id [vpc-id]\n</code></pre>"},{"location":"command-reference/#vpc-dhcp-options-ntp","title":"vpc-dhcp-options-ntp","text":"<p>List NTP servers of VPC(s)</p> <pre><code>USAGE: vpc-dhcp-options-ntp vpc-id [vpc-id]\n</code></pre>"},{"location":"command-reference/#vpc-endpoints","title":"vpc-endpoints","text":"<p>List VPC Endpoints</p> <pre><code>USAGE: vpc-endpoints [filter]\n</code></pre>"},{"location":"command-reference/#vpc-endpoint-services","title":"vpc-endpoint-services","text":"<p>List available VPC endpoint services</p> <pre><code>USAGE: vpc-endpoint-services\n</code></pre>"},{"location":"command-reference/#vpc-igw","title":"vpc-igw","text":"<p>List Internet Gateway of VPC(s)</p> <pre><code>USAGE: vpc-igw vpc-id [vpc-id]\n</code></pre>"},{"location":"command-reference/#vpc-route-tables","title":"vpc-route-tables","text":"<p>List Route Tables of VPC(s)</p> <pre><code>USAGE: vpc-route-tables vpc-id [vpc-id]\n\n$ vpcs | vpc-route-tables\nrtb-8e841c39  vpc-018d9739  NO_NAME\n</code></pre>"},{"location":"command-reference/#vpc-nat-gateways","title":"vpc-nat-gateways","text":"<p>List NAT Gateways of VPC(s)</p> <pre><code>USAGE: vpc-nat-gateways vpc-id [vpc-id]\n</code></pre>"},{"location":"command-reference/#vpc-subnets","title":"vpc-subnets","text":"<p>List subnets of VPC(s)</p> <pre><code>USAGE: vpc-subnets vpc-id [vpc-id]\n\n$ vpcs | vpc-subnets\nsubnet-34fd9cfa  vpc-018d9739  ap-southeast-2c  172.31.32.0/20  NO_NAME\nsubnet-8bb774fe  vpc-018d9739  ap-southeast-2a  172.31.0.0/20   NO_NAME\nsubnet-9eea2c07  vpc-018d9739  ap-southeast-2b  172.31.16.0/20  NO_NAME\n</code></pre>"},{"location":"command-reference/#vpc-network-acls","title":"vpc-network-acls","text":"<p>List Network ACLs of VPC(s)</p> <pre><code>USAGE: vpc-network-acls vpc-id [vpc-id]\n\n$ vpcs | vpc-network-acls\nacl-ff4914d1  vpc-018d9739\n</code></pre>"},{"location":"command-reference/#vpc-rds","title":"vpc-rds","text":"<p>List RDS instances of VPC(s)</p> <pre><code>USAGE: vpc-rds vpc-id [vpc-id]\n</code></pre>"},{"location":"command-reference/#vpc-default-delete","title":"vpc-default-delete","text":"<p>Print commands you would need to run to delete that pesky default VPC Exclude default VPCs that contain: - instances - lambda functions</p> <pre><code>$ vpc-default-delete\n\n# Deleting default VPC vpc-018d9739 in ap-southeast-2\naws --region ap-southeast-2 ec2 delete-subnet --subnet-id=subnet-8bb774fe\naws --region ap-southeast-2 ec2 delete-subnet --subnet-id=subnet-9eea2c07\naws --region ap-southeast-2 ec2 delete-subnet --subnet-id=subnet-34fd9cfa\naws --region ap-southeast-2 ec2 delete-vpc --vpc-id=vpc-018d9739\n</code></pre>"},{"location":"developer-guide/","title":"bash-my-aws development guide.","text":"<p>There are three distinct classes of functions types within <code>bash-my-aws</code>; query, detail, and action functions.</p> <p>Query functions are responsible for requesting AWS return a list of resources by their unique identifier. That would mean that when querying EC2 instances, it should return a list of instance-ids. If we were to query CloudFormation, then stacks are what would be returned.</p> <p>Detail functions should provide you an output of one or more attributes.</p> <p>eg. instance-asg(), instance-state()</p> <p>Action functions should perform an action against a resource. An action for an EC2 instance may be something like terminate or associate_eip.</p> <p>e.g. stack-create(), instance-terminate(), asg-suspend()</p> <p>There are some great things about <code>bash-my-aws</code> which I would hate to lose.</p> <ul> <li>It's easy to look at the code and learn how <code>awscli</code> works.</li> <li>Simple tasks have simple commands.</li> <li>It's really easy to extend.</li> </ul> <p>stdin should always be supported. You should be able to pipe one function into the next with ease. If an action function cannot be piped the output of a query function and have it work, without manipulation though other tools, then something is wrong.</p>"},{"location":"developer-guide/#namespacing","title":"Namespacing","text":"<p>We've decided to namespace functions by the resource they're concerned with. Yes, this may seem a bit like postgres naming their command createdb but that's OK. bash-my-aws reduces my keystrokes. We'll work something out if this becomes a problem.</p> <pre><code>stack-asgs        stack-elbs        stack-outputs     stack-tags      stack-validate\nstack-create      stack-events      stack-parameters  stack-tail      stacks\nstack-delete      stack-failure     stack-resources   stack-template\nstack-diff        stack-instances   stack-status      stack-update\n</code></pre> <pre><code>instance-asg          instance-ssh          instance-stop         instance-volumes\ninstance-console      instance-ssh-details  instance-tags         instances\ninstance-dns          instance-stack        instance-terminate\ninstance-iam-profile  instance-start        instance-type\ninstance-ip           instance-state        instance-userdata\n</code></pre> <pre><code>asg-capacity             asg-max-size-set         asg-resume               asgs\nasg-desired-size-set     asg-min-size-set         asg-suspend\nasg-instances            asg-processes_suspended  asgard\n</code></pre>"},{"location":"developer-guide/#resources","title":"Resources","text":"<p>This is a partial list of resources, with possible alternative names in brackets.</p> <ul> <li>asg               (autoscaling_group)</li> <li>bucket</li> <li>elb               (load_balancer)</li> <li>instance</li> <li>instance_type</li> <li>rds               (relational_database)</li> <li>dynamodb          (relational_database)</li> <li>sg                (security_group)</li> <li>stack             (cloudformation_stack)</li> </ul>"},{"location":"developer-guide/#query-functions","title":"Query Functions","text":"<p>Query functions are always namespaced under the plural of the resource.</p>"},{"location":"developer-guide/#default-query","title":"Default Query","text":"<p>TODO: lets talk about the details.</p> <p>Some example usage of this function would be:</p> <pre><code>$ &lt;resources&gt;\nresource_id1  attribute attribute\nresource_id2  attribute attribute\nresource_id3  attribute attribute\n</code></pre>"},{"location":"developer-guide/#detail-functions","title":"Detail Functions","text":"<p>Detail functions are always namespaced under the singular of the resource.</p> <p>Some example usage of this function would be:</p> <pre><code>$ &lt;resource&gt; &lt;resource_id&gt;\nattribute1: value1\nattribute2: value2\n</code></pre> <p>Some example responses:</p> <pre><code>$ instance_security_groups i-abcd1234\nsg-00000001 i-abcd1234\nsg-00000002 i-abcd1234\nsg-00000003 i-abcd1234\nsg-00000004 i-abcd1234\n\n$ security_group_rules\nTODO: I'm not sure yet how to present a security group rule.\n\n$ instance_type i-abcd1234\nc3.large i-abcd1234\n\n$ instance_type_memory c3.large\n3.75 c3.large\n</code></pre>"},{"location":"developer-guide/#action-functions","title":"Action Functions","text":"<p>Action functions are always namespaced under the singular of the resource and are suffixed with the action they are responsible for undertaking.</p> <p>Some example usage of this function would be:</p> <pre><code>$ &lt;resource&gt;_&lt;action&gt; &lt;resource_id&gt;\n</code></pre>"},{"location":"developer-guide/#tests","title":"Tests","text":"<p>You can start the test suite by running the command <code>make test</code>.</p>"},{"location":"developer-guide/#stdin","title":"STDIN","text":"<ul> <li>The first word of each line must be a resource.</li> <li>Additional information will be disregarded.</li> </ul>"},{"location":"linuxconf2020/","title":"Bash-my-AWS presentation video from LinuxConf 2020","text":"<p>Mike Bailey introduces Bash-my-AWS with live demo at LinuxConf 2020.</p> <p>Mon 13 Jan 2020. Linux Conf. Gold Coast, Australia.</p>"},{"location":"pipe-skimming/","title":"Pipe-Skimming pattern for Unix CLI Tools - Bash-my-AWS","text":"<p>When text is piped to a command that implements pipe-skimming, it appends the first item from each line (STDIN) to its argument array (ARGV).</p> <p>This allows for expressive line oriented output to be piped to commands that will skim only the resource identifiers from each line.</p> <p>This makes exploring and traversing related resources from the command line a pleasure:</p> <pre><code>$ stacks | grep nginx | stack-asgs | asg-instances | instance-state\ni-0e219fbee42347721  shutting-down\n</code></pre> <p>Pipe-skimming is simple to implement within commands and doesn't require any changes to the command shell.</p>"},{"location":"pipe-skimming/#how-it-works","title":"How it Works","text":"<p>The following examples show commands from Bash-my-AWS, the project from which this pattern was extracted.</p>"},{"location":"pipe-skimming/#usage-examples","title":"Usage Examples","text":"<p>Here we list EC2 Instances running in an Amazon AWS Account:</p> <pre><code>$ instances\ni-09d962a1d688bb3ec  t3.nano   running  grafana-bma  2020-01-16T03:53:44.000Z\ni-083f73ad5a1895ba0  t3.small  running  huginn-bma   2020-01-16T03:54:24.000Z\ni-0e219fbee42347721  t3.nano   running  nginx-bma    2020-01-16T03:56:22.000Z\n</code></pre> <p>Piping output from this command into <code>instance-asg</code> returns a list of AutoScaling Groups (ASGs) they belong to:</p> <pre><code>$ instances | instance-asg\nhuginn-bma-AutoScalingGroup-QS7EQOT1G7OX    i-083f73ad5a1895ba0\nnginx-bma-AutoScalingGroup-106KHAYHUSRHU    i-0e219fbee42347721\ngrafana-bma-AutoScalingGroup-1NXJHMJVZQVMB  i-09d962a1d688bb3ec\n</code></pre> <p>While functionally identical, the example above is far easier to type than this example using command arguments:</p> <pre><code>$ instance-asg i-09d962a1d688bb3ec i-083f73ad5a1895ba0 i-0e219fbee42347721\nhuginn-bma-AutoScalingGroup-QS7EQOT1G7OX    i-083f73ad5a1895ba0\nnginx-bma-AutoScalingGroup-106KHAYHUSRHU    i-0e219fbee42347721\ngrafana-bma-AutoScalingGroup-1NXJHMJVZQVMB  i-09d962a1d688bb3ec\n</code></pre> <p>We can continue adding commands to our pipeline:</p> <pre><code>$ instances | instance-asg | asg-capacity\ngrafana-bma-AutoScalingGroup-1NXJHMJVZQVMB  1  1  2\nhuginn-bma-AutoScalingGroup-QS7EQOT1G7OX    1  1  2\nnginx-bma-AutoScalingGroup-106KHAYHUSRHU    1  1  2\n</code></pre>"},{"location":"pipe-skimming/#implementation-in-bash-my-aws","title":"Implementation in Bash-my-AWS","text":"<p>The command <code>instance-asg</code> (a Bash function) appends the first item from each line of piped input on STDIN to its argument list:</p> <pre><code>instance-asg() {\n\n  # List autoscaling group membership of EC2 Instance(s)\n  #\n  #     USAGE: instance-asg instance-id [instance-id]\n\n  local instance_ids=$(skim-stdin \"$@\")\n  [[ -z $instance_ids ]] &amp;&amp; __bma_usage \"instance-id [instance-id]\" &amp;&amp; return 1\n\n  aws ec2 describe-instances      \\\n    --instance-ids $instance_ids  \\\n    --output text                 \\\n    --query \"\n      Reservations[].Instances[][\n        {\n          \"AutoscalingGroupName\":\n            [Tags[?Key=='aws:autoscaling:groupName'].Value][0][0],\n          \"InstanceId\": InstanceId\n        }\n      ][]\"          |\n  columnise\n}\n</code></pre> <p>This implementation uses a simple Bash function called <code>skim-stdin</code>:</p> <pre><code>skim-stdin() {\n\n  # Append first token from each line of STDIN to argument list\n  #\n  # Implementation of `pipe-skimming` pattern.\n  #\n  # Typical usage within Bash-my-AWS:\n  #\n  #   - local asg_names=$(skim-stdin \"$@\") # Append to arg list\n  #   - local asg_names=$(skim-stdin)      # Only draw from STDIN\n  #\n  #     $ stacks | skim-stdin foo bar\n  #     foo bar huginn mastodon grafana\n  #\n  #     $ stacks\n  #     huginn    CREATE_COMPLETE  2020-01-11T06:18:46.905Z  NEVER_UPDATED  NOT_NESTED\n  #     mastodon  CREATE_COMPLETE  2020-01-11T06:19:31.958Z  NEVER_UPDATED  NOT_NESTED\n  #     grafana   CREATE_COMPLETE  2020-01-11T06:19:47.001Z  NEVER_UPDATED  NOT_NESTED\n\n  (\n    printf -- \"$*\"                           # Print all args\n    printf \" \"                               # Print a space\n    [[ -t 0 ]] || awk 'ORS=\" \" { print $1 }' # Print first token of each line of STDIN\n  ) | awk '{$1=$1;print}'                    # Trim leading/trailing spaces\n}\n</code></pre> <p>Almost every command in Bash-my-AWS makes use of <code>skim-stdin</code> to accept resource identifiers via arguments and/or piped input on STDIN.</p> <p>AFAIK, this pattern has not previously been described.</p>"},{"location":"style/","title":"bash-my-aws style guide","text":"<ul> <li>Always quote \"$variables\"</li> <li>Only use parentheses around variables when not surrounded with whitespace (better way to phrase this?)</li> <li>use <code>$(date)</code> rather than \"<code>date</code>\"</li> <li> <p>use <code>[[</code> and <code>]]</code> rather than <code>[</code>, <code>]</code>, or <code>test</code></p> </li> <li> <p>show errors with <code>__bma_error()</code></p> </li> <li>show usage options with <code>__bma_usage()</code></li> <li> <p>parse inputs with <code>__bma_read_inputs()</code></p> </li> <li> <p>regenerate and test the bash_completion script after adding new functions</p> </li> </ul>"},{"location":"tour/","title":"Tour","text":"<p>Check this out!</p>"}]}