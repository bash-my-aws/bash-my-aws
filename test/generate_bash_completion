#!/usr/bin/env bash
ROOT_DIR="$(dirname $0)/../"

cat <<EOF
_bma_elbs_completion() {
    local command="\$1"
    local word="\$2"
    local options=\$(elbs)
    COMPREPLY=(\$(compgen -W "\${options}" -- \${word}))
    return 0
}

_bma_stacks_completion() {
  local command="\$1"
  local word="\$2"

  case "\${COMP_CWORD}" in
    1)
      COMPREPLY=( \$(compgen -W "\$(stacks)" -- \${word}) )
      return 0
      ;;
    *)
      COMPREPLY=( \$(compgen -f \${word}) )
      return 0
      ;;
  esac
}

_bma_instances_completion() {
    local command="\$1"
    local word="\$2"

    case \$word in
      "") options="i-a i-b" ;;
      *)  options=\$(instances) ;;
    esac

    COMPREPLY=(\$(compgen -W "\${options}" -- \${word}))
    return 0
}

_bma_asgs_completion() {
    local command="\$1"
    local word="\$2"
    local options=\$(asgs --query 'AutoScalingGroups[][{"AutoScalingGroupName": AutoScalingGroupName}][]')
    COMPREPLY=(\$(compgen -W "\${options}" -- \${word}))
    return 0
}

EOF

for type in instance asg stack elb; do
  functions=$(
    cat ${ROOT_DIR}/lib/${type}-functions |
    grep -e "^[^_#][^\ ]*()\ \?{" |
    tr -d "() {"
  )

  for function in ${functions}; do
    [[ "${function}" == "stack-validate" ]] && continue
    [[ "${function}" == "stack-create" ]] && continue
    [[ "${function}" == "asg-desired-size-set" ]] && continue
    [[ "${function}" == "asg-min-size-set" ]] && continue
    [[ "${function}" == "asg-max-size-set" ]] && continue
    [[ "${function}" == "elbs" ]] && continue
    echo "complete -F _bma_${type}s_completion ${function}"
  done
done

echo "complete -f stack-validate"
