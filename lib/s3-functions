#!/bin/bash
#
# s3-functions

buckets() {
  local filters=$(__bma_read_filters $@)

  aws s3api list-buckets \
    --query "Buckets[].[Name, CreationDate]" \
    --output text       |
  grep -E -- "$filters" |
  column -t
}

bucket-acls() {
  local buckets=$(__bma_read_inputs $@)
  [[ -z "$buckets" ]] && __bma_usage "bucket [bucket]" && return 1

  local bucket
  for bucket in $buckets; do
    aws s3api get-bucket-acl \
      --bucket "$bucket"     \
      --query "[
         '$bucket', 
         join(' ', Grants[?Grantee.Type=='Group'].[join('=',[Permission, Grantee.URI])][])
      ]" \
      --output text |
      sed 's#http://acs.amazonaws.com/groups/##g' 
  done
}

bucket-remove() {
  local buckets=$(__bma_read_inputs $@)
  [[ -z "$buckets" ]] && __bma_usage "bucket [bucket]" && return 1

  echo "You are about to remove the following buckets:"
  buckets "$buckets"
  [ -t 0 ] || exec </dev/tty # reattach keyboard to STDIN
  local regex_yes="^[Yy]$"
  read -p "Are you sure you want to continue? " -n 1 -r
  echo
  if [[ $REPLY =~ $regex_yes ]]
  then
    local bucket
    for bucket in $buckets; do
      echo aws s3 rb "s3://${bucket}"
    done
  fi
}

bucket-remove-force() {
  local buckets=$(__bma_read_inputs $@)
  [[ -z "$buckets" ]] && __bma_usage "bucket [bucket]" && return 1

  echo "You are about to delete all objects from and remove the following buckets:"
  buckets "$buckets"
  [ -t 0 ] || exec </dev/tty # reattach keyboard to STDIN
  local regex_yes="^[Yy]$"
  read -p "Are you sure you want to continue? " -n 1 -r
  echo
  if [[ $REPLY =~ $regex_yes ]]
  then
    local bucket
    for bucket in $buckets; do
      echo aws s3 rb --force "s3://${bucket}"
    done
  fi
}

