#!/bin/bash


hosted-zones(){

  # List Route53 Hosted Zones
  #
  #     $ hosted-zones
  #     /hostedzone/Z3333333333333  5   NotPrivateZone  bash-my-aws.org.
  #     /hostedzone/Z5555555555555  2   NotPrivateZone  bash-my-universe.com.
  #     /hostedzone/Z4444444444444  3   NotPrivateZone  bashmyaws.org.
  #     /hostedzone/Z1111111111111  3   NotPrivateZone  bash-my-aws.com.
  #     /hostedzone/Z2222222222222  3   NotPrivateZone  bashmyaws.com.

  local ids=$(skim-stdin)
  local filters=$(__bma_read_filters $@)

  aws route53 list-hosted-zones \
    --output text               \
    --query "
      HostedZones[${ids:+?contains(['${ids// /"','"}'], Id)}].[
        Id,
        ResourceRecordSetCount,
        (Config.PrivateZone && 'PrivateZone') || 'NotPrivateZone',
        Name
      ]"                |
  sort -k 4             |
  grep -E -- "$filters" |
  column -s$'\t' -t
}


hosted-zone-ns-records(){

  # Generate NS records for delegating domain to AWS
  #
  #     $ hosted-zones bash-my-aws.org
  #     /hostedzone/ZJ6ZCG2UD6OKX  5  NotPrivateZone  bash-my-aws.org.
  #
  #     $ hosted-zones bash-my-aws.org | hosted-zone-ns-records
  #     bash-my-aws.org. 300 IN NS	ns-786.awsdns-34.net.
  #     bash-my-aws.org. 300 IN NS	ns-1549.awsdns-01.co.uk.
  #     bash-my-aws.org. 300 IN NS	ns-362.awsdns-45.com.
  #     bash-my-aws.org. 300 IN NS	ns-1464.awsdns-55.org.

  local inputs=$(skim-stdin "$@")
  local hosted_zone_id=$(echo "$inputs" | awk '{print $1}')
  [[ -z "$hosted_zone_id" ]] && __bma_usage "hosted-zone-id" && return 1

  local hosted_zone_name
  hosted_zone_name=$(
    aws route53 list-resource-record-sets            \
      --hosted-zone-id "$hosted_zone_id"             \
      --query "ResourceRecordSets[?Type=='NS'].Name" \
      --output text
  )

  aws route53 list-resource-record-sets                   \
    --hosted-zone-id "$hosted_zone_id"                    \
    --output text                                         \
    --query "
      ResourceRecordSets[?Type=='NS'].ResourceRecords[].[
        '$hosted_zone_name 300 IN NS',
        Value
      ]"
}

hosted-zone-records(){

  # List Records in a Route53 Hosted Zone
  # NOTE: AWS alias records are shown with a fake TTL of 86400.
  #
  #     $ hosted-zones bash-my-aws.org
  #     /hostedzone/ZJ6ZCG2UD6OKX  5  NotPrivateZone  bash-my-aws.org.
  #
  #     $ hosted-zones bash-my-aws.org | hosted-zone-records
  #     bash-my-aws.org.  900 SOA ns-1549.awsdns-01.co.uk. awsdns-hostmaster.amazon.com. 1 7200 900 1209600 86400
  #     bash-my-aws.org.  300 NS  ns-1464.awsdns-55.org.
  #     bash-my-aws.org.  300 A 185.199.108.153
  #     bash-my-aws.org.  300 A 185.199.109.153
  #     bash-my-aws.org.  300 TXT "google-site-verification=RbKejqu95y4Q78BkWnjaiM0rl6SYugtTdVLexK35b2k"
  #     lb.bash-my-aws.org. 86400 ALIAS dualstack.lb-bmaorg-12345.us-east-1.elb.amazonaws.com

  local hosted_zone_id="$(__bma_read_inputs $@)"
  [[ -z "$hosted_zone_id" ]] && __bma_usage "hosted-zone-id" && return 1

  aws route53 list-resource-record-sets \
    --hosted-zone-id "$hosted_zone_id"  \
    --output json                       |
  jq --raw-output '.ResourceRecordSets[] |
    (select(.ResourceRecords) |
      "\(.Name) \t\(.TTL) \t\(.Type) \t\(.ResourceRecords[].Value)\n"),
    (select(.AliasTarget) |
      "\(.Name) \t86400 \tALIAS \t\(.AliasTarget.DNSName)\n")'
}
